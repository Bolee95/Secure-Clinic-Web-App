{"version":3,"sources":["containers/Layout/topbar/TopbarSidebarButton.jsx","containers/Layout/topbar/TopbarMenuLink.jsx","containers/Layout/topbar/TopbarProfile.jsx","containers/Layout/topbar/Topbar.jsx","containers/Layout/sidebar/SidebarLink.jsx","containers/Layout/sidebar/SidebarCategory.jsx","containers/Layout/sidebar/SidebarContent.jsx","shared/prop-types/ReducerProps.js","containers/Layout/sidebar/Sidebar.jsx","containers/Layout/index.jsx","redux/actions/sidebarActions.js","redux/actions/themeActions.js","containers/App/MainWrapper.jsx","containers/LogIn/components/LogInForm.jsx","shared/components/Loading.jsx","containers/LogIn/index.jsx","shared/components/form/Select.jsx","shared/components/Buttons/ExpandButton.jsx","containers/Pacient/CreatePatient/components/CreatePatientForm.jsx","containers/Pacient/CreatePatient/index.jsx","containers/ExampleTwo/components/ExampleCard.jsx","containers/ExampleTwo/components/ResponsiveTable.jsx","containers/ExampleTwo/components/BorderedTable.jsx","containers/ExampleTwo/index.jsx","shared/components/form/FileInput.jsx","shared/components/form/MultiSelect.jsx","containers/ExampleThree/components/HorizontalForm.jsx","containers/ExampleThree/components/VerticalForm.jsx","containers/Show.js","shared/components/Notification/Notification.jsx","shared/components/Notification/BasicNotifications.jsx","containers/ExampleThree/index.jsx","shared/components/FullWidthNotification.jsx","containers/Pacient/AllPatients/components/AllPatientsTable.jsx","containers/Pacient/AllPatients/index.jsx","containers/Pacient/AllPatientsForHospital/components/AllPatientsTable.jsx","containers/Pacient/AllPatientsForHospital/index.jsx","containers/Pacient/AddToPending/components/addPendingForm.jsx","containers/Pacient/AddToPending/index.jsx","containers/Pacient/AllPendings/components/allPendingsTable.jsx","containers/Pacient/AllPendings/index.jsx","containers/Admin/CreateUser/components/CreateUserForm.jsx","containers/Admin/CreateUser/index.jsx","containers/Admin/DeleteUser/components/DeleteUserForm.jsx","containers/Admin/DeleteUser/index.jsx","shared/components/ModalPopUp.jsx","containers/Pacient/AllPendingsForHospital/components/allPendingsForHospitalTable.jsx","containers/Pacient/AllPendingsForHospital/index.jsx","containers/Pacient/SetPacientWaitingStatus/components/setPacientWaitingStatusForm.jsx","containers/Pacient/SetPacientWaitingStatus/index.jsx","containers/App/Router.jsx","redux/reducers/themeReducer.js","redux/reducers/sidebarReducer.js","redux/reducers/rtlReducer.js","redux/reducers/userReducer.js","containers/App/store.js","redux/actions/rtlActions.js","containers/App/ScrollToTop.jsx","containers/App/App.jsx","serviceWorker.js","index.js"],"names":["icon","process","TopbarSidebarButton","this","props","changeMobileSidebarVisibility","changeSidebarVisibility","type","className","onClick","src","alt","PureComponent","TopbarMenuLinks","title","path","to","Ava","TopbarProfile","toggle","setState","prevState","collapse","state","user","require","get","name","surname","Collapse","isOpen","Topbar","SidebarLink","newLink","route","activeClassName","Badge","defaultProps","SidebarCategory","isNew","children","categoryClass","classNames","Component","SidebarContent","hideSidebar","changeToDark","changeToLight","string","PropTypes","shape","Sidebar","show","bool","direction","sidebar","sidebarClass","Layout","dispatch","layoutClass","layout","withRouter","connect","MainWrapper","theme","rtl","location","pathname","dir","LogInForm","handleSubmit","isLoading","onSubmit","Field","component","placeholder","reduxForm","form","Loading","loading","fill","d","LogInComponent","processLogin","bind","history","push","data","userId","bodyFormData","FormData","set","axios","method","url","then","response","retrieveUserData","error","window","alert","console","log","licenceId","params","headers","entityData","store","role","hospitalName","hospitalCode","React","SelectField","handleChange","selectedOption","onChange","value","options","clearable","classNamePrefix","renderSelectField","input","meta","touched","ExpandButton","color","outline","load","fullExpand","expandClass","expand","Button","CreatePatientForm","cities","label","reset","Col","md","lg","Card","CardBody","clform__form-group-descriptionform__form-group-descriptionassName","class","ButtonToolbar","CreatePatientComponent","processFormData","JSON","stringify","Container","ExampleCard","ResponsiveTable","t","Table","responsive","BorderedTable","xl","ExamplePage","Row","FileInputField","htmlFor","id","e","preventDefault","files","target","file","renderFileInputField","MultiSelectField","isMulti","closeOnSelect","removeSelected","renderMultiSelectField","HorizontalForm","handleEmailChange","email","showPassword","testHandleSubmit","disabled","VerticalForm","sleep","ms","Promise","resolve","setTimeout","values","a","BasicNotification","message","img","FullWideNotification","BasicNotifications","position","showNotification","notification","xs","ExamplePageThree","notice","content","duration","closable","style","top","left","printPassedData","ShowResults","AllPatientsTable","selector","sortable","pagination","noHeader","columns","AllPatientsComponent","patients","newPatients","index","length","arrayItem","patient","city","lbo","jmbg","currentWaitingStatus","waitingListCode","AllPatientsForHospitalComponent","AddPendingForm","processHospitalSelection","updateSelectionData","hospitals","ordinations","services","patientsData","hospitalsData","ordinationsData","servicesData","hospital","hospitalData","code","patientData","firstName","lastName","ordination","ordinationData","service","serviceData","NewPendingComponent","formSubmited","updateOrdinationsAndServices","ordinationItem","ordinationCode","ordinationName","serviceItem","serviceName","serviceCode","dayCapacity","selectedHospital","find","selectedPatient","AllPendingsComponent","pendings","pending","pacientLbo","pacientJmbg","CreateUserForm","CreateUserComponent","DeleteUserForm","DeleteUserComponent","loadingStarted","ModalComponent","modal","agreedTapped","onAgreed","Icon","btn","colored","header","modalClass","Modal","modalClassName","AllPendingsForHospitalTable","onRowClick","onApproveClick","cell","row","onApprove","onRowClicked","AllPendingsForHospitalComponent","approveTapped","getPatients","rowData","ChangePacientWaitingStatusForm","possibleStatus","statusesData","waitingStatus","statusData","PacientWaitingStatusComponent","targetUrl","newWaitingStatus","Pages","CreatePacientForm","ExamplePageTwo","wrappedRoutes","Router","exact","LogIn","initialState","reducer","combineReducers","reduxFormReducer","action","createStore","ScrollToTop","prevProps","scrollTo","App","loaded","addEventListener","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.543bcb20.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nconst icon = `${process.env.PUBLIC_URL}/img/burger.svg`;\n\nclass TopbarSidebarButton extends PureComponent {\n  static propTypes = {\n    changeMobileSidebarVisibility: PropTypes.func.isRequired,\n    changeSidebarVisibility: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { changeMobileSidebarVisibility, changeSidebarVisibility } = this.props;\n\n    return (\n      <div>\n        <button type=\"button\" className=\"topbar__button topbar__button--desktop\" onClick={changeSidebarVisibility}>\n          <img src={icon} alt=\"\" className=\"topbar__button-icon\" />\n        </button>\n        <button type=\"button\" className=\"topbar__button topbar__button--mobile\" onClick={changeMobileSidebarVisibility}>\n          <img src={icon} alt=\"\" className=\"topbar__button-icon\" />\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default TopbarSidebarButton;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default class TopbarMenuLinks extends PureComponent {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n  };\n\n  render() {\n    const { title, icon, path } = this.props;\n\n    return (\n      <Link className=\"topbar__link\" to={path}>\n        <span className={`topbar__link-icon lnr lnr-${icon}`} />\n        <p className=\"topbar__link-title\">{title}</p>\n      </Link>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport DownIcon from 'mdi-react/ChevronDownIcon';\nimport ThreeIcon from 'mdi-react/HeartBoxIcon';\nimport { Collapse } from 'reactstrap';\nimport TopbarMenuLink from './TopbarMenuLink';\n\nconst Ava = `${process.env.PUBLIC_URL}/img/ava.png`;\n\nexport default class TopbarProfile extends PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      collapse: false,\n    };\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({ collapse: !prevState.collapse }));\n  };\n\n  render() {\n    const { collapse } = this.state;\n\n    var store = require('store');\n    const user = store.get('user');\n    const name = user.name + ' ' + user.surname;\n\n    return (\n      <div className=\"topbar__profile\">\n        <button type=\"button\" className=\"topbar__avatar\" onClick={this.toggle}>\n          <img className=\"topbar__avatar-img\" src={Ava} alt=\"avatar\" />\n          <p className=\"topbar__avatar-name\">{name}</p>\n          <DownIcon className=\"topbar__icon\" />\n        </button>\n        {collapse && <button type=\"button\" className=\"topbar__back\" onClick={this.toggle} />}\n        <Collapse isOpen={collapse} className=\"topbar__menu-wrap\">\n          <div className=\"topbar__menu\">\n            <TopbarMenuLink title=\"Page one\" icon=\"list\" path=\"/pages/one\" />\n            <TopbarMenuLink title=\"Page two\" icon=\"inbox\" path=\"/pages/two\" />\n            <TopbarMenuLink title=\"Page three\" icon=\"heart\" path=\"/pages/three\" />\n            <div className=\"topbar__menu-divider\" />\n            <TopbarMenuLink title=\"Log Out\" icon=\"exit\" path=\"/\" />\n          </div>\n        </Collapse>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport TopbarSidebarButton from './TopbarSidebarButton';\nimport TopbarProfile from './TopbarProfile';\n\nclass Topbar extends PureComponent {\n  static propTypes = {\n    changeMobileSidebarVisibility: PropTypes.func.isRequired,\n    changeSidebarVisibility: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { changeMobileSidebarVisibility, changeSidebarVisibility } = this.props;\n\n    return (\n      <div className=\"topbar\">\n        <div className=\"topbar__wrapper\">\n          <div className=\"topbar__left\">\n            <TopbarSidebarButton\n              changeMobileSidebarVisibility={changeMobileSidebarVisibility}\n              changeSidebarVisibility={changeSidebarVisibility}\n            />\n            <Link className=\"topbar__logo\" to=\"/dashboard_default\" />\n          </div>\n          <div className=\"topbar__right\">\n            <TopbarProfile />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Topbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nconst SidebarLink = ({\n  title, icon, newLink, route, onClick,\n}) => (\n  <NavLink\n    to={route}\n    onClick={onClick}\n    activeClassName=\"sidebar__link-active\"\n  >\n    <li className=\"sidebar__link\">\n      {icon ? <span className={`sidebar__link-icon lnr lnr-${icon}`} /> : ''}\n      <p className=\"sidebar__link-title\">\n        {title}\n        {newLink ? <Badge className=\"sidebar__link-badge\"><span>New</span></Badge> : ''}\n      </p>\n    </li>\n  </NavLink>\n);\n\nSidebarLink.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string,\n  newLink: PropTypes.bool,\n  route: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nSidebarLink.defaultProps = {\n  icon: '',\n  newLink: false,\n  route: '/',\n  onClick: () => {},\n};\n\nexport default SidebarLink;\n","import React, { Component } from 'react';\nimport { Collapse } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport default class SidebarCategory extends Component {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    icon: PropTypes.string,\n    isNew: PropTypes.bool,\n    children: PropTypes.arrayOf(PropTypes.element).isRequired,\n  };\n\n  static defaultProps = {\n    icon: '',\n    isNew: false,\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      collapse: false,\n    };\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({ collapse: !prevState.collapse }));\n  };\n\n  render() {\n    const {\n      title, icon, isNew, children,\n    } = this.props;\n    const { collapse } = this.state;\n    const categoryClass = classNames({\n      'sidebar__category-wrap': true,\n      'sidebar__category-wrap--open': collapse,\n    });\n\n    return (\n      <div className={categoryClass}>\n        <button type=\"button\" className=\"sidebar__link sidebar__category\" onClick={this.toggle}>\n          {icon ? <span className={`sidebar__link-icon lnr lnr-${icon}`} /> : ''}\n          <p className=\"sidebar__link-title\">{title}\n            {isNew && <span className=\"sidebar__category-new\" />}\n          </p>\n          <span className=\"sidebar__category-icon lnr lnr-chevron-right\" />\n        </button>\n        <Collapse isOpen={collapse} className=\"sidebar__submenu-wrap\">\n          <ul className=\"sidebar__submenu\">\n            <div>\n              {children}\n            </div>\n          </ul>\n        </Collapse>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SidebarLink from './SidebarLink';\nimport SidebarCategory from './SidebarCategory';\n\nclass SidebarContent extends Component {\n  static propTypes = {\n    changeToDark: PropTypes.func.isRequired,\n    changeToLight: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  hideSidebar = () => {\n    const { onClick } = this.props;\n    onClick();\n  };\n\n  render() {\n    const { changeToDark, changeToLight } = this.props;\n    return (\n      <div className=\"sidebar__content\">\n        <ul className=\"sidebar__block\">\n          <SidebarLink title=\"Log In\" icon=\"exit\" route=\"/log_in\" onClick={this.hideSidebar} />\n          <SidebarCategory title=\"Layout\" icon=\"layers\">\n            <button type=\"button\" className=\"sidebar__link\" onClick={changeToLight}>\n              <p className=\"sidebar__link-title\">Light Theme</p>\n            </button>\n            <button type=\"button\" className=\"sidebar__link\" onClick={changeToDark}>\n              <p className=\"sidebar__link-title\">Dark Theme</p>\n            </button>\n          </SidebarCategory>\n        </ul>\n        <ul className=\"sidebar__block\">\n          <SidebarCategory title=\"Admin\" icon=\"diamond\">\n            <SidebarLink title=\"Create User\" route=\"/pages/createUser\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Delete User\" route=\"/pages/deleteUser\" onClick={this.hideSidebar} />\n          </SidebarCategory>\n          <SidebarCategory title=\"Patient\" icon=\"diamond\">\n            <SidebarLink title=\"Create Patient\" route=\"/pages/createPatient\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"All Patients\" route=\"/pages/allPatients\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"All Patients For Hospital\" route=\"/pages/allPatientsForHospital\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Add New Pending\" route=\"/pages/addNewPending\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"All Pendings\" route=\"/pages/allPendings\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"All Pendings For Hospital\" route=\"/pages/allPendingsForHospital\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Set Pacient Waiting Status\" route=\"/pages/setPacientWaitingStatus\" onClick={this.hideSidebar} />\n          </SidebarCategory>\n          <SidebarCategory title=\"Example\" icon=\"diamond\">\n            <SidebarLink title=\"Page two\" route=\"/pages/two\" onClick={this.hideSidebar} />\n            <SidebarLink title=\"Page three\" route= \"/pages/three\" onClick={this.hideSidebar} />\n          </SidebarCategory>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default SidebarContent;\n","import PropTypes from 'prop-types';\n\nconst {\n  string, shape,\n} = PropTypes;\n\nexport const SidebarProps = shape({\n  show: PropTypes.bool,\n  collapse: PropTypes.bool,\n});\n\nexport const ThemeProps = shape({\n  className: string,\n});\n\nexport const RTLProps = shape({\n  direction: string,\n});\n","import React from 'react';\nimport Scrollbar from 'react-smooth-scrollbar';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport SidebarContent from './SidebarContent';\nimport { SidebarProps } from '../../../shared/prop-types/ReducerProps';\n\nconst Sidebar = ({\n  changeToDark, changeToLight, changeMobileSidebarVisibility, sidebar,\n}) => {\n  const sidebarClass = classNames({\n    sidebar: true,\n    'sidebar--show': sidebar.show,\n    'sidebar--collapse': sidebar.collapse,\n  });\n\n  return (\n    <div className={sidebarClass}>\n      <button type=\"button\" className=\"sidebar__back\" onClick={changeMobileSidebarVisibility} />\n      <Scrollbar className=\"sidebar__scroll scroll\">\n        <div className=\"sidebar__wrapper sidebar__wrapper--desktop\">\n          <SidebarContent\n            onClick={() => {}}\n            changeToDark={changeToDark}\n            changeToLight={changeToLight}\n          />\n        </div>\n        <div className=\"sidebar__wrapper sidebar__wrapper--mobile\">\n          <SidebarContent\n            onClick={changeMobileSidebarVisibility}\n            changeToDark={changeToDark}\n            changeToLight={changeToLight}\n          />\n        </div>\n      </Scrollbar>\n    </div>\n  );\n};\n\nSidebar.propTypes = {\n  sidebar: SidebarProps.isRequired,\n  changeToDark: PropTypes.func.isRequired,\n  changeToLight: PropTypes.func.isRequired,\n  changeMobileSidebarVisibility: PropTypes.func.isRequired,\n};\n\nexport default Sidebar;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Topbar from './topbar/Topbar';\nimport Sidebar from './sidebar/Sidebar';\n\nimport { changeThemeToDark, changeThemeToLight } from '../../redux/actions/themeActions';\nimport { changeMobileSidebarVisibility, changeSidebarVisibility } from '../../redux/actions/sidebarActions';\nimport { SidebarProps } from '../../shared/prop-types/ReducerProps';\n\nclass Layout extends Component {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    sidebar: SidebarProps.isRequired,\n  };\n\n  changeSidebarVisibility = () => {\n    const { dispatch } = this.props;\n    dispatch(changeSidebarVisibility());\n  };\n\n  changeMobileSidebarVisibility = () => {\n    const { dispatch } = this.props;\n    dispatch(changeMobileSidebarVisibility());\n  };\n\n  changeToDark = () => {\n    const { dispatch } = this.props;\n    dispatch(changeThemeToDark());\n  };\n\n  changeToLight = () => {\n    const { dispatch } = this.props;\n    dispatch(changeThemeToLight());\n  };\n\n  render() {\n    const { sidebar } = this.props;\n\n    const layoutClass = classNames({\n      layout: true,\n      'layout--collapse': sidebar.collapse,\n    });\n\n    return (\n      <div className={layoutClass}>\n        <Topbar\n          changeMobileSidebarVisibility={this.changeMobileSidebarVisibility}\n          changeSidebarVisibility={this.changeSidebarVisibility}\n        />\n        <Sidebar\n          sidebar={sidebar}\n          changeToDark={this.changeToDark}\n          changeToLight={this.changeToLight}\n          changeMobileSidebarVisibility={this.changeMobileSidebarVisibility}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(state => ({\n  sidebar: state.sidebar,\n}))(Layout));\n","export const CHANGE_SIDEBAR_VISIBILITY = 'CHANGE_SIDEBAR_VISIBILITY';\nexport const CHANGE_MOBILE_SIDEBAR_VISIBILITY = 'CHANGE_MOBILE_SIDEBAR_VISIBILITY';\n\nexport function changeSidebarVisibility() {\n  return {\n    type: CHANGE_SIDEBAR_VISIBILITY,\n  };\n}\n\nexport function changeMobileSidebarVisibility() {\n  return {\n    type: CHANGE_MOBILE_SIDEBAR_VISIBILITY,\n  };\n}\n","export const CHANGE_THEME_TO_DARK = 'CHANGE_THEME_TO_DARK';\nexport const CHANGE_THEME_TO_LIGHT = 'CHANGE_THEME_TO_LIGHT';\n\nexport function changeThemeToDark() {\n  return {\n    type: CHANGE_THEME_TO_DARK,\n  };\n}\n\nexport function changeThemeToLight() {\n  return {\n    type: CHANGE_THEME_TO_LIGHT,\n  };\n}\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { ThemeProps, RTLProps } from '../../shared/prop-types/ReducerProps';\n\nclass MainWrapper extends PureComponent {\n  static propTypes = {\n    theme: ThemeProps.isRequired,\n    rtl: RTLProps.isRequired,\n    children: PropTypes.element.isRequired,\n    location: PropTypes.shape({}).isRequired,\n  };\n\n  render() {\n    const {\n      theme, children, rtl, location,\n    } = this.props;\n\n    const direction = location.pathname === '/' ? 'ltr' : rtl.direction;\n\n    return (\n      <div className={`${theme.className} ${direction}-support`} dir={direction}>\n        <div className=\"wrapper\">\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(state => ({\n  theme: state.theme,\n  rtl: state.rtl,\n}))(MainWrapper));\n","import React, { PureComponent } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport AccountOutlineIcon from 'mdi-react/AccountOutlineIcon';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n// Klasa koja se dodaje u UI kroz index \nclass LogInForm extends PureComponent {\n  // Props-i koji se prosledjuju prilikom kreiranja komponente\n  static propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    isLoading: PropTypes.bool.isRequired\n  };\n\n  constructor() {\n    super();\n    // Definisanje i postavljanje state-a koji se koriste da bi se azurirao UI komponente\n    // this.state = {\n    //   showPassword: false,\n    // };\n  }\n\n  // Definicija f-je koja se rposledjuje u OnClick neke komponente i koja menja trenutno stanje state-a\n  // showPassword = (e) => {\n  //   e.preventDefault();\n  //   this.setState(prevState => ({ showPassword: !prevState.showPassword }));\n  // };\n\n  render() {\n    const { handleSubmit, isLoading } = this.props;\n    // const { showPassword } = this.state;\n\n    return (\n      // className definisan u form.scss fajlu\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"form__form-group\">\n          <span className=\"form__form-group-label\">Card ID</span>\n          <div className=\"form__form-group-field\">\n            <div className=\"form__form-group-icon\">\n              <AccountOutlineIcon />\n            </div>\n            {/* ReduxForm Field polje */ }\n            <Field\n              name=\"userId\"\n              component=\"input\"\n              type=\"text\"\n              placeholder=\"Card ID\"\n            />\n          </div>\n        </div>\n        {/*\n        <div className=\"form__form-group\">\n          <span className=\"form__form-group-label\">Password</span>\n          <div className=\"form__form-group-field\">\n            <div className=\"form__form-group-icon\">\n              <KeyVariantIcon />\n            </div>\n            <Field\n              name=\"password\"\n              component=\"input\"\n              type={showPassword ? 'text' : 'password'}\n              placeholder=\"Password\"\n            />\n            <button\n              className={`form__form-group-button${showPassword ? ' active' : ''}`}\n              onClick={e => this.showPassword(e)}\n              type=\"button\"\n            ><EyeIcon />\n            </button>\n            \n          </div>\n          <div className=\"account__forgot-password\">\n            <a href=\"/\">Forgot a password?</a>\n          </div>\n        </div>\n       \n        <div className=\"form__form-group\">\n          <div className=\"form__form-group-field\">\n            <Field\n              name=\"remember_me\"\n              component={renderCheckBoxField}\n              label=\"Remember me\"\n            />\n          </div>\n        </div>\n         */}\n        {/* Komponente koje funkcionisu slicno kao href */}\n        <button className=\"btn btn-primary account__btn account__btn--small\" type=\"submit\">Log In</button>\n        <Link className=\"btn btn-outline-primary account__btn account__btn--small\" to=\"/pages/\">Hijack login</Link>\n      </form>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'log_in_form',\n})(LogInForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Loading = ({ loading }) => (\n  <div className={`load${loading ? '' : ' loaded'}`}>\n    <div className=\"load__icon-wrap\">\n      <svg className=\"load__icon\">\n        <path fill=\"#4ce1b6\" d=\"M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z\" />\n      </svg>\n    </div>\n  </div>\n);\n\nLoading.propTypes = {\n  loading: PropTypes.bool,\n};\n\nLoading.defaultProps = {\n  loading: false,\n};\n\nexport default Loading;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport LogInForm from './components/LogInForm';\nimport Loading from '../../shared/components/Loading';\nimport axios from 'axios';\n\nclass LogInComponent extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: false\n    };\n\n    this.processLogin = this.processLogin.bind(this);\n  }\n\n  componentDidMount() {\n    var store = require('store');\n    if (store.get('loggedin') == true) {\n      this.props.history.push(\"/pages\");\n    }\n  }\n\n  processLogin(data) {\n\n    this.setState({ isLoading : true});\n\n    const userId = data[\"userId\"];\n    var bodyFormData = new FormData();\n    bodyFormData.set('userId', userId);\n\n    axios({ method: 'POST', url: '/shared/login', data: bodyFormData })\n    .then(response => {\n      let isValid = response['data'];\n      if (isValid) {\n        this.retrieveUserData(userId);\n      }\n    }, error => {\n      window.alert(error);\n      console.log(error);\n      this.setState({ isLoading: false });\n    })\n  }\n\n  retrieveUserData(licenceId) {\n    axios({ method: 'GET', url: '/shared/getEntity', params: { licenceId: licenceId }, headers: { 'Identity_name': 'doctor' }})\n    .then(response => {\n\n      let entityData = response.data;\n      var store = require('store');\n\n      store.set('user', { licenceId: entityData.licenceId,\n                          name: entityData.name,\n                          surname: entityData.surname,\n                          role: entityData.role,\n                          hospitalName: entityData.hospitalName,\n                          hospitalCode: entityData.hospitalCode\n      })\n      store.set('loggedIn', true);\n\n      this.props.history.push(\"/pages\");\n    }, error => {\n      window.alert(error);\n      console.log(error);\n    })\n    .then(() => {\n      this.setState({ isLoading: false });\n    })\n  }\n  \n  render() {\n\n    const { isLoading } = this.state;\n\n    if (isLoading) {\n      return (<Loading loading={isLoading} />);\n    }\n\n    return (\n      <div className=\"account\">\n        <div className=\"account__wrapper\">\n          <div className=\"account__card\">\n            <div className=\"account__head\">\n              <h3 className=\"account__title\">Welcome to\n                <span className=\"account__logo\"> Secure Clinic</span>\n              </h3>\n              <h4 className=\"account__subhead subhead\">Pacient centric and transparent Waiting lists managment</h4>\n            </div>\n            <LogInForm onSubmit={this.processLogin} isLoading={isLoading} />\n            <div className=\"account__or\">\n              <p>Or log to system by scanning ID card</p>\n            </div>\n            <Link className=\"btn btn-primary account__btn account__btn--small\" to=\"/log_in\">Scan</Link>\n            {/* <div className=\"account__social\">\n              <Link\n                className=\"account__social-btn account__social-btn--facebook\"\n                to=\"/pages/one\"\n              ><FacebookIcon />\n              </Link>\n              <Link\n                className=\"account__social-btn account__social-btn--google\"\n                to=\"/pages/one\"\n              ><GooglePlusIcon />\n              </Link>\n            </div> */}\n          </div>\n        </div>\n      </div>\n      )};\n}\n\nexport default LogInComponent;\n\n// if you want to add select, date-picker and time-picker in your app you need to uncomment the first\n// four lines in /scss/components/form.scss to add styles\n","import React, { PureComponent } from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\n\nclass SelectField extends PureComponent {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string,\n    options: PropTypes.arrayOf(PropTypes.shape({\n      value: PropTypes.string,\n      label: PropTypes.string,\n    })),\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        value: PropTypes.string,\n        label: PropTypes.string,\n      }),\n    ]).isRequired,\n  };\n\n  static defaultProps = {\n    placeholder: '',\n    options: [],\n  };\n\n  handleChange = (selectedOption) => {\n    const { onChange } = this.props;\n    onChange(selectedOption);\n  };\n\n  render() {\n    const {\n      value, name, placeholder, options,\n    } = this.props;\n\n    return (\n      <Select\n        name={name}\n        value={value}\n        onChange={this.handleChange}\n        options={options}\n        clearable={false}\n        className=\"react-select\"\n        placeholder={placeholder}\n        classNamePrefix=\"react-select\"\n        />\n    );\n  }\n}\n\nconst renderSelectField = (props) => {\n  const {\n    input, meta, options, placeholder, className\n  } = props;\n  \n  return (\n    <div className={`form__form-group-input-wrap ${className}`}>\n      <SelectField\n        {...input}\n        options={options}\n        placeholder={placeholder}\n      />\n      {meta.touched && meta.error && <span className=\"form__form-group-error\">{meta.error}</span>}\n    </div>\n  );\n};\n\nrenderSelectField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n  }).isRequired,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string,\n  }),\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string,\n  })),\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n};\n\nrenderSelectField.defaultProps = {\n  meta: null,\n  options: [],\n  placeholder: '',\n  className: '',\n};\n\nexport default renderSelectField;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport LoadingIcon from 'mdi-react/LoadingIcon';\nimport classNames from 'classnames';\n\nexport default class ExpandButton extends PureComponent {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    load: PropTypes.bool.isRequired,\n    outline: PropTypes.bool,\n    color: PropTypes.string,\n  };\n\n  static defaultProps = {\n    title: '',\n    outline: false,\n    color: 'btn btn-primary'\n  };\n\n  constructor() {\n    super();\n  }\n\n  render() {\n    const { color, outline, title, load, fullExpand, onSubmit } = this.props;\n    const expandClass = classNames({\n      icon: load,\n      expand: true,\n      'expand--load': load,\n    });\n\n    return (\n      <Button \n        type=\"submit\"\n        onClick={onSubmit}\n        className={expandClass}\n        color={color}\n        outline={outline}\n      >\n        <p><LoadingIcon /> {title}</p>\n      </Button>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  Card, CardBody, Col, Button, ButtonToolbar,\n} from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport PropTypes from 'prop-types';\nimport renderSelectField from '../../../../shared/components/form/Select';\nimport ExpandButton from '../../../../shared/components/Buttons/ExpandButton';\n\nclass CreatePatientForm extends PureComponent {\n  static propTypes = {\n    isLoading: PropTypes.bool.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    reset: PropTypes.func.isRequired,\n  };\n\n  constructor() {\n    super();\n\n    const cities = [\n      { value: 'Beograd', label: 'Beograd' },\n      { value: 'Nis', label: 'Nis' }\n    ]\n\n    this.state = {\n      cities: cities\n    }\n  }\n\n  render() {\n    const { handleSubmit, reset, isLoading } = this.props;\n    const { cities } = this.state;\n\n    return (\n      <Col md={12} lg={12}>\n        <Card>\n          <CardBody>\n            <div className=\"card__title\">\n              <h4 className=\"page-title\" >New Pacient Formulae</h4>\n              <h1 className=\"subhead\">Please, insert mandatory user data for creating new one inside system</h1>\n            </div>\n            <form className=\"form\" onSubmit={handleSubmit}>\n              <div className=\"form__form-group\">\n                <span clform__form-group-descriptionform__form-group-descriptionassName=\"form__form-group-label\">Name</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"name\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder=\"John\"\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Surname</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"surname\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder=\"Doe\"\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">City</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"city\"\n                    component={renderSelectField}\n                    options={cities}\n                    placeholder={\"Select city\"}\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">JMBG number</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"jmbg\"\n                    component=\"input\"\n                    type=\"number\"\n                    placeholder=\"0123456789\"\n                  />\n                </div>\n                <span class=\"form__form-group-description\">You can find this number on back side of your medical ID </span>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">LBO number</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"lbo\"\n                    component=\"input\"\n                    type=\"number\"\n                    placeholder=\"012345678\"\n                  />\n                </div>\n                <span class=\"form__form-group-description\">This number can be fund on front side of your medical ID </span>\n              </div>\n    {/*\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Disabled Field</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"disableInput\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder=\"Disabled Input\"\n                    disabled\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">E-mail</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"email\"\n                    component=\"input\"\n                    type=\"email\"\n                    placeholder=\"example@mail.com\"\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Password</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"password\"\n                    component=\"input\"\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder=\"Password\"\n                  />\n                  <button\n                    type=\"button\"\n                    className={`form__form-group-button${showPassword ? ' active' : ''}`}\n                    onClick={e => this.showPassword(e)}\n                  ><EyeIcon />\n                  </button>\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Icon Left</span>\n                <div className=\"form__form-group-field\">\n                  <div className=\"form__form-group-icon\">\n                    <EmailIcon />\n                  </div>\n                  <Field\n                    name=\"leftIcon\"\n                    component=\"input\"\n                    type=\"email\"\n                    placeholder=\"Icon Left Input\"\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Icon Right</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"rightIcon\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder=\"Icon Right Input\"\n                  />\n                  <div className=\"form__form-group-icon\">\n                    <AccountSearchIcon />\n                  </div>\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">\n                  Add file\n                </span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"fileVertical\"\n                    component={renderFileInputField}\n                  />\n                </div>\n              </div>\n    */}\n              <ButtonToolbar className=\"form__button-toolbar\">\n                {/* <Button color=\"primary\" type=\"submit\">Submit</Button> */}\n                <ExpandButton title=\"Submit\" load={isLoading} ></ExpandButton>\n                <Button type=\"button\" onClick={reset}>\n                  Cancel\n                </Button>\n              </ButtonToolbar>\n            </form>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'CreatePatientForm', // a unique identifier for this form\n})(CreatePatientForm);\n","import React from 'react';\nimport { Container } from 'reactstrap';\nimport CreatePatientForm from './components/CreatePatientForm';\nimport Loading from '../../../shared/components/Loading';\nimport axios from 'axios';\n\nclass CreatePatientComponent extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = { \n      isLoading : false\n    };\n\n    this.processFormData = this.processFormData.bind(this);\n  }\n\n  processFormData(data) {\n    this.setState({ isLoading: true });\n\n    var bodyFormData = new FormData();\n    bodyFormData.set('name', data['name']);\n    bodyFormData.set('surname', data['surname']);\n    bodyFormData.set('jmbg', data['jmbg']);\n    bodyFormData.set('lbo', data['lbo']);\n    bodyFormData.set('city', data['city'].value);\n\n    axios({ method: 'POST', url: '/doctor/addPacient', data: bodyFormData, headers: { 'Identity_name': 'admin' }})\n    .then(response => {\n      console.log(response);\n      window.alert(\"Succeed\");\n    }, error => {\n      \n      window.alert(error);\n      console.log(error);\n    }).then(() => {\n      this.setState({ isLoading: false });\n    });\n    console.log(\"On submit data passed:\" + JSON.stringify(data, null ,2));\n  }\n\n  render() {\n\n    const { isLoading } = this.state;\n\n    return (\n      <Container className=\"dashboard\">\n        <CreatePatientForm onSubmit={this.processFormData} isLoading={isLoading}></CreatePatientForm>\n      </Container>\n    )\n  };\n}\n\nexport default CreatePatientComponent;","import React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\n\nconst ExampleCard = () => (\n  <Col md={12}>\n    <Card>\n      <CardBody>\n        <div className=\"card__title\">\n          <h5 className=\"bold-text\">Example title</h5>\n          <h5 className=\"subhead\">Example subhead</h5>\n        </div>\n        <p>Your content here</p>\n      </CardBody>\n    </Card>\n  </Col>\n);\n\nexport default ExampleCard;\n","import React from 'react';\nimport {\n  Card, CardBody, Col, Badge, Table, Button\n} from 'reactstrap';\n//import { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nconst ResponsiveTable = ({ t }) => (\n  <Col md={12} lg={12}>\n    <Card>\n      <CardBody>\n        <div className=\"card__title\">\n          {/*<h5 className=\"bold-text\">{t('tables.basic_tables.responsive_table')}</h5>*/}\n          <h5 className=\"subhead\">Use default table with property <span className=\"red-text\">responsive</span></h5>\n        </div>\n        <Table responsive className=\"table--bordered\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>First Name</th>\n              <th>Last Name</th>\n              <th>Username</th>\n              <th>Age</th>\n              <th>Date</th>\n              <th>Location</th>\n              <th>Status</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>1</td>\n              <td>Maria</td>\n              <td>Morisson</td>\n              <td>@dragon</td>\n              <td>21</td>\n              <td>1990/12/01</td>\n              <td>Melbourne</td>\n              <td><Badge color=\"success\">In Progress</Badge></td>\n              <td> <Button color=\"danger\">Delete</Button><Button color=\"success\">Add</Button> </td>\n            </tr>\n            <tr>\n              <td>2</td>\n              <td>Bobby</td>\n              <td>Brown</td>\n              <td>@boboby</td>\n              <td>35</td>\n              <td>1992/12/01</td>\n              <td>Tokio</td>\n              <td><Badge color=\"primary\">Completed</Badge></td>\n            </tr>\n            <tr>\n              <td>3</td>\n              <td>Alexander</td>\n              <td>Medinberg</td>\n              <td>@medimedi</td>\n              <td>41</td>\n              <td>1975/12/01</td>\n              <td>Moscow</td>\n              <td><Badge color=\"success\">In Progress</Badge></td>\n            </tr>\n            <tr>\n              <td>4</td>\n              <td>Vera</td>\n              <td>Lori</td>\n              <td>@lori</td>\n              <td>44</td>\n              <td>1978/12/01</td>\n              <td>Melbourne</td>\n              <td><Badge color=\"primary\">Completed</Badge></td>\n            </tr>\n            <tr>\n              <td>5</td>\n              <td>Maria</td>\n              <td>Morisson</td>\n              <td>@dragon</td>\n              <td>25</td>\n              <td>1992/12/01</td>\n              <td>London</td>\n              <td><Badge color=\"primary\">Completed</Badge></td>\n            </tr>\n            <tr>\n              <td>6</td>\n              <td>Bobby</td>\n              <td>Brown</td>\n              <td>@boboby</td>\n              <td>29</td>\n              <td>1988/12/01</td>\n              <td>Rome</td>\n              <td><Badge color=\"primary\">Completed</Badge></td>\n            </tr>\n          </tbody>\n        </Table>\n      </CardBody>\n    </Card>\n  </Col>\n);\n\nResponsiveTable.propTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nexport default ResponsiveTable;\n","import React from 'react';\nimport {\n  Card, CardBody, Col, Badge, Table,\n} from 'reactstrap';\n//import { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nconst BorderedTable = ({ t }) => (\n  <Col md={12} lg={12} xl={6}>\n    <Card>\n      <CardBody>\n        <div className=\"card__title\">\n          {/*<h5 className=\"bold-text\">{t('tables.basic_tables.bordered_table')}</h5>*/}\n          <h5 className=\"subhead\">Use default table with class\n            <span className=\"red-text\"> table--bordered</span>\n          </h5>\n        </div>\n        <Table className=\"table--bordered\" responsive>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>First Name</th>\n              <th>Last Name</th>\n              <th>Username</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>1</td>\n              <td>Maria</td>\n              <td>Morisson</td>\n              <td>@dragon</td>\n              <td><Badge color=\"success\">Work</Badge></td>\n            </tr>\n            <tr>\n              <td>2</td>\n              <td>Bobby</td>\n              <td>Brown</td>\n              <td>@boboby</td>\n              <td><Badge color=\"warning\">Vacation</Badge></td>\n            </tr>\n            <tr>\n              <td>3</td>\n              <td>Alexander</td>\n              <td>Medinberg</td>\n              <td>@medimedi</td>\n              <td><Badge color=\"warning\">Vacation</Badge></td>\n            </tr>\n            <tr>\n              <td>4</td>\n              <td>Vera</td>\n              <td>Lori</td>\n              <td>@lori</td>\n              <td><Badge color=\"success\">Work</Badge></td>\n            </tr>\n            <tr>\n              <td>5</td>\n              <td>Maria</td>\n              <td>Morisson</td>\n              <td>@dragon</td>\n              <td><Badge color=\"warning\">Vacation</Badge></td>\n            </tr>\n            <tr>\n              <td>6</td>\n              <td>Bobby</td>\n              <td>Brown</td>\n              <td>@boboby</td>\n              <td><Badge color=\"success\">Work</Badge></td>\n            </tr>\n            <tr>\n              <td>7</td>\n              <td>Alexander</td>\n              <td>Medinberg</td>\n              <td>@medimedi</td>\n              <td><Badge color=\"success\">Work</Badge></td>\n            </tr>\n          </tbody>\n        </Table>\n      </CardBody>\n    </Card>\n  </Col>\n);\n\nBorderedTable.propTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nexport default BorderedTable;\n","import React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport ExampleCard from './components/ExampleCard';\nimport BasicTable from './components/BasicTable';\nimport ResponsiveTable from './components/ResponsiveTable';\nimport BorderedTable from './components/BorderedTable';\n\nconst ExamplePage = () => (\n  <Container className=\"dashboard\">\n    <Row>\n      <Col md={12}>\n        <h3 className=\"page-title\">Example Page Two</h3>\n      </Col>\n      <Col md={12}>\n       <BorderedTable></BorderedTable>\n      </Col>\n      <Col md={12}>\n        <ResponsiveTable></ResponsiveTable>\n      </Col>\n    </Row>\n    <Row>\n      <ExampleCard />\n    </Row>\n  </Container>\n);\n\nexport default ExamplePage;\n","/* eslint-disable jsx-a11y/label-has-for */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass FileInputField extends PureComponent {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.shape({\n        name: PropTypes.string,\n      }),\n      PropTypes.string,\n    ]),\n  };\n\n  static defaultProps = {\n    value: null,\n  };\n\n  render() {\n    const { onChange, name, value } = this.props;\n\n    return (\n      <div className=\"form__form-group-file\">\n        <label htmlFor={name}>Choose the file</label>\n        <span>{value.name}</span>\n        <input\n          type=\"file\"\n          name={name}\n          id={name}\n          onChange={\n            (e) => {\n              e.preventDefault();\n              // convert files to an array\n              const files = [...e.target.files];\n              onChange({ file: files[0], name: files[0].name });\n            }\n          }\n        />\n      </div>\n    );\n  }\n}\n\nconst renderFileInputField = (props) => {\n  const { input, meta } = props;\n  return (\n    <div className=\"form__form-group-input-wrap\">\n      <FileInputField {...input} />\n      {meta.touched && meta.error && <span className=\"form__form-group-error\">{meta.error}</span>}\n    </div>\n  );\n};\n\nrenderFileInputField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n  }).isRequired,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string,\n  }),\n};\n\nrenderFileInputField.defaultProps = {\n  meta: null,\n};\n\nexport default renderFileInputField;\n","import React, { PureComponent } from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\n\nclass MultiSelectField extends PureComponent {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string,\n    options: PropTypes.arrayOf(PropTypes.shape({\n      value: PropTypes.string,\n      label: PropTypes.string,\n    })),\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.shape({\n        value: PropTypes.string,\n        label: PropTypes.string,\n      })),\n    ]).isRequired,\n  };\n\n  static defaultProps = {\n    placeholder: '',\n    options: [],\n  };\n\n  handleChange = (value) => {\n    const { onChange } = this.props;\n    onChange(value);\n  };\n\n  render() {\n    const {\n      value, name, placeholder, options,\n    } = this.props;\n\n    return (\n      <Select\n        isMulti\n        name={name}\n        value={value}\n        onChange={this.handleChange}\n        options={options}\n        clearable={false}\n        closeOnSelect={false}\n        removeSelected={false}\n        className=\"react-select\"\n        placeholder={placeholder}\n        classNamePrefix=\"react-select\"\n      />\n    );\n  }\n}\n\nconst renderMultiSelectField = (props) => {\n  const {\n    input, meta, options, placeholder,\n  } = props;\n  return (\n    <div className=\"form__form-group-input-wrap\">\n      <MultiSelectField\n        {...input}\n        options={options}\n        placeholder={placeholder}\n      />\n      {meta.touched && meta.error && <span className=\"form__form-group-error\">{meta.error}</span>}\n    </div>\n  );\n};\n\nrenderMultiSelectField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n  }).isRequired,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string,\n  }),\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string,\n  })),\n  placeholder: PropTypes.string,\n};\n\nrenderMultiSelectField.defaultProps = {\n  meta: null,\n  options: [],\n  placeholder: '',\n};\n\nexport default renderMultiSelectField;\n","import React, { PureComponent } from 'react';\nimport {\n  Card, CardBody, Col, Button, ButtonToolbar,\n} from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport EyeIcon from 'mdi-react/EyeIcon';\nimport EmailIcon from 'mdi-react/EmailIcon';\nimport AccountSearchIcon from 'mdi-react/AccountSearchIcon';\nimport PropTypes from 'prop-types';\nimport renderFileInputField from '../../../shared/components/form/FileInput';\nimport renderSelectField from '../../../shared/components/form/Select';\nimport renderMultiSelectField from '../../../shared/components/form/MultiSelect';\n\nclass HorizontalForm extends PureComponent {\n  static propTypes = {\n    t: PropTypes.func,\n    handleSubmit: PropTypes.func.isRequired,\n    reset: PropTypes.func.isRequired,\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      showPassword: false,\n      email: ''\n    };\n  }\n\n  handleEmailChange = (e) => {\n    e.preventDefault();\n    this.setState({ email: e.target.value });\n  };\n\n  showPassword = (e) => {\n    e.preventDefault();\n    this.setState(prevState => ({ showPassword: !prevState.showPassword }));\n  };\n\n  testHandleSubmit = () => {\n    this.props.handleSubmit();\n  };\n\n  render() {\n    const {reset, t, handleSubmit } = this.props;\n    const { showPassword, email } = this.state;\n    return (\n      <Col md={12} lg={12}>\n        <Card>\n          <CardBody>\n            <div className=\"card__title\">\n              {/*<h5 className=\"bold-text\">{t('forms.basic_form.horizontal_form')}</h5>*/}\n              <h5 className=\"subhead\">Labels are left from fields</h5>\n            </div>\n            <form className=\"form form--horizontal\" onSubmit={handleSubmit}>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Default Label</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"defaultInput\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder=\"Default Input\"\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Disabled Field</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"disableInput\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder=\"Disabled Input\"\n                    disabled\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">E-mail</span>\n                <div className=\"form__form-group-field\">\n                  <input\n                    name=\"email\"\n                    component=\"input\"\n                    type=\"email\"\n                    placeholder=\"example@mail.com\"\n                    onChange={e => this.handleEmailChange(e)}\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Password</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"password\"\n                    component=\"input\"\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder=\"Password\"\n                  />\n                  <button\n                    type=\"button\"\n                    className={`form__form-group-button${showPassword ? ' active' : ''}`}\n                    onClick={e => this.showPassword(e)}\n                  ><EyeIcon />\n                  </button>\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Icon Left</span>\n                <div className=\"form__form-group-field\">\n                  <div className=\"form__form-group-icon\">\n                    <EmailIcon />\n                  </div>\n                  <Field\n                    name=\"leftIcon\"\n                    component=\"input\"\n                    type=\"email\"\n                    placeholder=\"Icon Left Input\"\n                    onChange={e => this.handleEmailChange(e)}\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Icon Right</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"rightIcon\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder=\"Icon Right Input\"\n                  />\n                  <div className=\"form__form-group-icon\">\n                    <AccountSearchIcon />\n                  </div>\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Field with description</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"descriptionInput\"\n                    component=\"input\"\n                    type=\"text\"\n                  />\n                </div>\n                <span className=\"form__form-group-description\">\n                  Zealously now pronounce existence add you instantly say offending.\n                </span>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Dropdown</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"select\"\n                    component={renderSelectField}\n                    loading={true }\n                    options={[\n                      { value: 'one', label: 'One' },\n                      { value: 'two', label: 'Two' },\n                    ]}\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Multiselect</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"multiSelect\"\n                    component={renderMultiSelectField}\n                    options={[\n                      { value: 'one', label: 'One' },\n                      { value: 'two', label: 'Two' },\n                    ]}\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"textarea\"\n                    component=\"textarea\"\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">\n                  Add file\n                </span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"file\"\n                    component={renderFileInputField}\n                  />\n                </div>\n              </div>\n              <ButtonToolbar className=\"form__button-toolbar\">\n                <Button color=\"primary\" type=\"submit\">Submit</Button>\n                <Button type=\"button\" onClick={reset}>\n                  Cancel\n                </Button>\n              </ButtonToolbar>\n            </form>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'horizontal_form', // a unique identifier for this form\n})(HorizontalForm);\n","import React, { PureComponent } from 'react';\nimport {\n  Card, CardBody, Col, Button, ButtonToolbar,\n} from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport EyeIcon from 'mdi-react/EyeIcon';\nimport EmailIcon from 'mdi-react/EmailIcon';\nimport AccountSearchIcon from 'mdi-react/AccountSearchIcon';\n//import { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport renderFileInputField from '../../../shared/components/form/FileInput';\n\nclass VerticalForm extends PureComponent {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    reset: PropTypes.func.isRequired,\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      showPassword: false,\n    };\n  }\n\n  showPassword = (e) => {\n    e.preventDefault();\n    this.setState(prevState => ({ showPassword: !prevState.showPassword }));\n  };\n\n\n  render() {\n    const { handleSubmit, reset, t } = this.props;\n    const { showPassword } = this.state;\n\n    return (\n      <Col md={12} lg={12}>\n        <Card>\n          <CardBody>\n            <div className=\"card__title\">\n              {/*<h5 className=\"bold-text\">{t('forms.basic_form.vertical_form')}</h5>*/}\n              <h5 className=\"subhead\">Labels are above fields</h5>\n            </div>\n            <form className=\"form\" onSubmit={handleSubmit}>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Default Label</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"defaultInput\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder=\"Default Input\"\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Disabled Field</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"disableInput\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder=\"Disabled Input\"\n                    disabled\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">E-mail</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"email\"\n                    component=\"input\"\n                    type=\"email\"\n                    placeholder=\"example@mail.com\"\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Password</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"password\"\n                    component=\"input\"\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder=\"Password\"\n                  />\n                  <button\n                    type=\"button\"\n                    className={`form__form-group-button${showPassword ? ' active' : ''}`}\n                    onClick={e => this.showPassword(e)}\n                  ><EyeIcon />\n                  </button>\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Icon Left</span>\n                <div className=\"form__form-group-field\">\n                  <div className=\"form__form-group-icon\">\n                    <EmailIcon />\n                  </div>\n                  <Field\n                    name=\"leftIcon\"\n                    component=\"input\"\n                    type=\"email\"\n                    placeholder=\"Icon Left Input\"\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Icon Right</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"rightIcon\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder=\"Icon Right Input\"\n                  />\n                  <div className=\"form__form-group-icon\">\n                    <AccountSearchIcon />\n                  </div>\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">\n                  Add file\n                </span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"fileVertical\"\n                    component={renderFileInputField}\n                  />\n                </div>\n              </div>\n              <ButtonToolbar className=\"form__button-toolbar\">\n                <Button color=\"primary\" type=\"submit\">Submit</Button>\n                <Button type=\"button\" onClick={reset}>\n                  Cancel\n                </Button>\n              </ButtonToolbar>\n            </form>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'vertical_form', // a unique identifier for this form\n})(VerticalForm);\n","/* eslint-disable no-alert */\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nexport default (async function showResults(values) {\n  await sleep(500); // simulate server latency\n  window.alert(`You submitted:\\n\\n${JSON.stringify(values, null, 2)}`);\n});\n","/* eslint-disable react/no-multi-comp */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class BasicNotification extends PureComponent {\n  static propTypes = {\n    color: PropTypes.string,\n    title: PropTypes.string,\n    message: PropTypes.string.isRequired,\n  };\n\n  static defaultProps = {\n    color: '',\n    title: '',\n  };\n\n  render() {\n    const { color, title, message } = this.props;\n\n    return (\n      <div className={`notification notification--${color}`}>\n        <h5 className=\"notification__title bold-text\">{title}</h5>\n        <p className=\"notification__message\">{message}</p>\n      </div>\n    );\n  }\n}\n\nexport class ImageNotification extends PureComponent {\n  static propTypes = {\n    img: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    message: PropTypes.string.isRequired,\n  };\n\n  static defaultProps = {\n    title: '',\n  };\n\n  render() {\n    const { img, title, message } = this.props;\n\n    return (\n      <div className=\"notification notification--image\">\n        <div className=\"notification__image\">\n          <img src={img} alt=\"\" />\n        </div>\n        <h5 className=\"notification__title bold-text\">{title}</h5>\n        <p className=\"notification__message\">{message}</p>\n      </div>\n    );\n  }\n}\n\nexport class FullWideNotification extends PureComponent {\n  static propTypes = {\n    color: PropTypes.string,\n    message: PropTypes.string.isRequired,\n  };\n\n  static defaultProps = {\n    color: '',\n  };\n\n  render() {\n    const { color, message } = this.props;\n\n    return (\n      <div className={`notification notification--full-wide notification--${color}`}>\n        <p className=\"notification__message\">{message}</p>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  Button, ButtonToolbar, Card, CardBody, Col,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\n//import { withTranslation } from 'react-i18next';\nimport { BasicNotification } from  '../../components/Notification/Notification'; //'../../../../shared/components/Notification';\n\nclass BasicNotifications extends PureComponent {\n  static propTypes = {\n    showNotification: PropTypes.func.isRequired,\n    t: PropTypes.func.isRequired,\n  };\n\n  show = (position) => {\n    const { showNotification } = this.props;\n    return showNotification({\n      notification: <BasicNotification\n        title=\"Remember!\"\n        message=\"Learning day desirous informed expenses material returned six the.\n                                       She enabled invited exposed him another.\"\n      />,\n      position,\n    });\n  };\n\n  render() {\n    const { t } = this.props;\n\n    return (\n      <Col md={12} lg={6} xs={12}>\n        <Card>\n          <CardBody>\n            <div className=\"card__title\">\n              {/*<h5 className=\"bold-text\">{t('ui_elements.notifications.basic_notifications')}</h5>*/}\n              <h5 className=\"subhead\">Use BasicNotification with necessary value of property\n                <span className=\"red-text\"> position</span>\n              </h5>\n            </div>\n            <ButtonToolbar>\n              <Button outline onClick={() => this.show('left-up')}>Left Up</Button>\n              <Button outline onClick={() => this.show('right-up')}>Right Up</Button>\n            </ButtonToolbar>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default (BasicNotifications);\n","import React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport HorisontalForm from './components/HorizontalForm';\nimport VerticalForm from './components/VerticalForm';\nimport ShowResults from '../Show';\nimport Loading from '../../shared/components/Loading';\nimport Notification from '../../shared/components/Notification/BasicNotifications';\nimport { BasicNotification } from '../../shared/components/Notification/Notification';\nimport NotificationsTest from '../../shared/components/FullWidthNotification';\n\nlet notificationLU = null;\nlet notificationRU = null;\nlet notificationTC = null;\n\n\nclass ExamplePageThree extends React.Component {\n    constructor() {\n        super();\n        this.state = {};\n        this.printPassedData = this.printPassedData.bind(this);\n    }\n\n    printPassedData(data) {\n        console.log(\"On submit data passed:\" + data);\n    }\n\n    showNotification = ({ notification, position }, rtl) => {\n        switch (position) {\n          case 'left-up':\n            notificationLU.notice({\n              content: notification,\n              duration: 5,\n              closable: true,\n              style: { top: 0, left: 0 },\n              className: `${position} ${rtl}-support`,\n            });\n            break;\n          case 'right-up':\n            notificationRU.notice({\n              content: notification,\n              duration: 5,\n              closable: true,\n              style: { top: 0, left: 'calc(100vw - 100%)' },\n              className: `${position} ${rtl}-support`,\n            });\n            break;\n          default:\n            notificationTC.notice({\n              content: notification,\n              duration: 5,\n              closable: true,\n              style: { top: 0, left: 0 },\n              className: `${position} ${rtl}-support`,\n            });\n            break;\n        }\n      };\n\n    render() {\n        return (\n        <Container className=\"dashboard\">\n            <BasicNotification message={\"test poruka\"}></BasicNotification>\n            {/*<Loading loading={false}/>*/}\n            <Notification showNotification={({ notification, position }) => this.showNotification({ notification, position })} ></Notification>\n            <VerticalForm onSubmit={ShowResults}></VerticalForm> \n        </Container>\n        );\n    }\n\n\n}\n\nexport default ExamplePageThree;\n","import React, { PureComponent } from 'react';\nimport {\n  Button, ButtonToolbar, Card, CardBody, Col,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { FullWideNotification } from '../../shared/components/Notification/Notification'; \n\nclass ColorStatesFullWidth extends PureComponent {\n  static propTypes = {\n    showNotification: PropTypes.func.isRequired,\n    t: PropTypes.func.isRequired,\n  };\n\n  show = (color) => {\n    const { showNotification } = this.props;\n    return showNotification({\n      notification: <FullWideNotification\n        color={color}\n        message=\"Learning day desirous informed expenses material returned six the.\n                                        She enabled invited exposed him another.\"\n      />,\n      position: 'full',\n    });\n  };\n\n  render() {\n    const { t } = this.props;\n\n    return (\n      <Col md={12} lg={6} xs={12}>\n        <Card>\n          <CardBody>\n            <div className=\"card__title\">\n              <h5 className=\"subhead\">Use FullWideNotification with color: <span className=\"red-text\">primary</span>,\n                <span className=\"red-text\"> success</span>, <span className=\"red-text\">warning</span>,\n                <span className=\"red-text\"> danger</span>\n              </h5>\n            </div>\n            <ButtonToolbar>\n              <Button color=\"primary\" onClick={() => this.show('primary')}>Primary</Button>\n              <Button color=\"success\" onClick={() => this.show('success')}>Success</Button>\n              <Button color=\"warning\" onClick={() => this.show('warning')}>Warning</Button>\n              <Button color=\"danger\" onClick={() => this.show('danger')}>Danger</Button>\n            </ButtonToolbar>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default ColorStatesFullWidth;\n","/* eslint-disable react/no-unused-state,react/no-unescaped-entities */\nimport React, { PureComponent } from 'react';\nimport PropTypes, { array } from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { ThemeProps } from '../../../../shared/prop-types/ReducerProps';\nimport DataTable from 'react-data-table-component';\nimport { Button, ButtonToolbar } from 'reactstrap';\n\nclass AllPatientsTable extends PureComponent {\n  static propTypes = {\n    data: array.isRequired,\n    theme: ThemeProps.isRequired\n  };\n\n  constructor() {\n    super();\n\n    const headers = [\n      {\n        selector: 'first_name',\n        name: 'First Name',\n        sortable: true,\n      },\n      {\n        selector: 'last_name',\n        name: 'Last Name',\n        sortable: true,\n      },\n      {\n        selector: 'lbo',\n        name: 'LBO Number',\n        sortable: true,\n      },\n      {\n        selector: 'JMBG',\n        name: 'JMBG Number',\n        sortable: true,\n      },\n      {\n        selector: 'waiting_status',\n        name: 'Waiting Status',\n        sortable: true,\n      },\n      {\n        selector: 'city',\n        name: 'City',\n        sortable: true,\n      },\n      {\n        selector: 'hospital_name',\n        name: 'Hospital Name',\n        sortable: true,\n      },\n      {\n        selector: 'hospital_code',\n        name: 'Hospital Code',\n        sortable: true,\n      },\n      {\n        selector: 'waiting_list_code',\n        name: 'Waiting List Code',\n        sortable: true\n      }\n    ];\n\n    this.state = {\n      data: [],\n      headers: headers\n    };\n  }\n\n\n  render() {\n    const { headers } = this.state;\n    const { theme, data } = this.props;\n\n    return (      \n      <Col md={12} lg={12}>\n      <Card>\n        <CardBody>\n          <div className=\"card__title\">\n            <h5 className=\"bold-text\">All patients in system</h5>\n            <h5 className=\"subhead\">List of all patients for all hospitals registered</h5>\n          </div>\n      <DataTable pagination={true} \n                 theme={ theme.className === 'theme-light' ? 'light' : 'dark'}\n                 noHeader={true}\n                 columns={headers}\n                 data={data}/>\n        </CardBody>\n       </Card>\n      </Col>\n    );\n  }\n}\n\nexport default withRouter(connect(state => ({\n  theme: state.theme,\n}))(AllPatientsTable));","import React from 'react';\nimport { Container } from 'reactstrap';\nimport Loading from '../../../shared/components/Loading';\nimport axios from 'axios';\nimport AllPatientsTable from './components/AllPatientsTable';\nimport { PatientProps } from './../../../shared/prop-types/TableProps';\nimport { array } from 'prop-types';\n\nclass AllPatientsComponent extends React.Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            loading: false,\n            patients: []\n        };\n    }\n\n    componentDidMount() {\n        this.setState({ loading: true });\n        axios({ method: 'GET', url: '/doctor/getPacient/all', headers: { 'Identity_name': 'admin' }})\n        .then(response => {\n            let newPatients = []\n            for (let index = 0; index < response.data.length; index++) {\n                let arrayItem = response.data[index];\n                let patient = {\n                    'first_name': arrayItem.name,\n                    'last_name': arrayItem.surname,\n                    'city': arrayItem.city,\n                    'lbo': arrayItem.lbo,\n                    'JMBG': arrayItem.jmbg,\n                    'hospital_name': arrayItem.hospitalName,\n                    'hospital_code': arrayItem.hospitalCode,\n                    'waiting_status': arrayItem.currentWaitingStatus,\n                    'waiting_list_code': arrayItem.waitingListCode\n                }\n                newPatients.push(patient);\n            }\n\n            this.setState({\n                patients: newPatients,\n                loading: false\n            })\n        }, error => {\n           window.alert(error)    \n        })\n      }\n\n    render() {\n        const { patients, loading } = this.state;\n        console.log(\"Is loading \" + loading);\n\n        if (loading) {\n            return (<Loading loading={loading} />);\n        }\n\n        return (    \n            <Container className=\"dashboard\">\n                <AllPatientsTable data={patients}/>\n            </Container>\n        )\n    };\n}\n\nexport default AllPatientsComponent;","/* eslint-disable react/no-unused-state,react/no-unescaped-entities */\nimport React, { PureComponent } from 'react';\nimport PropTypes, { array } from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { ThemeProps } from '../../../../shared/prop-types/ReducerProps';\nimport DataTable from 'react-data-table-component';\n\nclass AllPatientsTable extends PureComponent {\n  static propTypes = {\n    data: array.isRequired,\n    theme: ThemeProps.isRequired\n  };\n\n  constructor() {\n    super();\n\n    const headers = [\n      {\n        selector: 'first_name',\n        name: 'First Name',\n        sortable: true,\n      },\n      {\n        selector: 'last_name',\n        name: 'Last Name',\n        sortable: true,\n      },\n      {\n        selector: 'lbo',\n        name: 'LBO Number',\n        sortable: true,\n      },\n      {\n        selector: 'JMBG',\n        name: 'JMBG Number',\n        sortable: true,\n      },\n      {\n        selector: 'waiting_status',\n        name: 'Waiting Status',\n        sortable: true,\n      },\n      {\n        selector: 'city',\n        name: 'City',\n        sortable: true,\n      },\n      {\n        selector: 'hospital_name',\n        name: 'Hospital Name',\n        sortable: true,\n      },\n      {\n        selector: 'hospital_code',\n        name: 'Hospital Code',\n        sortable: true,\n      },\n      {\n        selector: 'waiting_list_code',\n        name: 'Waiting List Code',\n        sortable: true\n      }\n    ];\n\n    this.state = {\n      data: [],\n      headers: headers\n    };\n  }\n\n\n  render() {\n    const { headers } = this.state;\n    const { theme, data } = this.props;\n\n    return (      \n      <Col md={12} lg={12}>\n      <Card>\n        <CardBody>\n          <div className=\"card__title\">\n            <h5 className=\"bold-text\">All patients in system</h5>\n            <h5 className=\"subhead\">List of all patients for all hospitals registered</h5>\n          </div>\n      <DataTable pagination={true} \n                 theme={ theme.className === 'theme-light' ? 'light' : 'dark'}\n                 noHeader={true}\n                 columns={headers}\n                 data={data}/>\n        </CardBody>\n       </Card>\n      </Col>\n    );\n  }\n}\n\nexport default withRouter(connect(state => ({\n  theme: state.theme,\n}))(AllPatientsTable));","import React from 'react';\nimport { Container } from 'reactstrap';\nimport Loading from '../../../shared/components/Loading';\nimport axios from 'axios';\nimport AllPatientsTable from './components/AllPatientsTable';\n\nclass AllPatientsForHospitalComponent extends React.Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            loading: false,\n            patients: []\n        };\n    }\n\n    componentDidMount() {\n        \n        var store = require('store');\n        const hospitalCode = store.get('user').hospitalCode;\n\n        this.setState({ loading: true });\n        axios({ method: 'GET', url: '/doctor/getPacient/allForHospital', headers: { 'Identity_name': 'admin' }, params: { 'hospitalCode': hospitalCode }})\n        .then(response => {\n            let newPatients = []\n            for (let index = 0; index < response.data.length; index++) {\n                let arrayItem = response.data[index];\n                let patient = {\n                    'first_name': arrayItem.name,\n                    'last_name': arrayItem.surname,\n                    'city': arrayItem.city,\n                    'lbo': arrayItem.lbo,\n                    'JMBG': arrayItem.jmbg,\n                    'hospital_name': arrayItem.hospitalName,\n                    'hospital_code': arrayItem.hospitalCode,\n                    'waiting_status': arrayItem.currentWaitingStatus,\n                    'waiting_list_code': arrayItem.waitingListCode\n                }\n                newPatients.push(patient);\n            }\n\n            this.setState({\n                patients: newPatients,\n                loading: false\n            })\n        }, error => {\n           window.alert(error)    \n        })\n      }\n\n    render() {\n        const { patients, loading } = this.state;\n        console.log(\"Is loading \" + loading);\n\n        if (loading) {\n            return (<Loading loading={loading} />);\n        }\n\n        return (    \n            <Container className=\"dashboard\">\n                <AllPatientsTable data={patients}/>\n            </Container>\n        )\n    };\n}\n\nexport default AllPatientsForHospitalComponent;","import React, { PureComponent } from 'react';\nimport {\n  Card, CardBody, Col, Button, ButtonToolbar,\n} from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport PropTypes from 'prop-types';\nimport renderSelectField from '../../../../shared/components/form/Select';\nimport ExpandButton from '../../../../shared/components/Buttons/ExpandButton';\n\nclass AddPendingForm extends PureComponent {\n  static propTypes = {\n    patients: PropTypes.array.isRequired,\n    hospitals: PropTypes.array.isRequired,\n    isLoading: PropTypes.bool.isRequired,\n    updateSelectionData: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    reset: PropTypes.func.isRequired,\n  };\n\n  constructor() {\n    super();\n    this.processHospitalSelection = this.processHospitalSelection.bind(this);\n  }\n\n  processHospitalSelection(e) {\n    const { updateSelectionData } = this.props;\n    updateSelectionData(e.value);\n  }\n\n  render() {\n    const { handleSubmit, reset, isLoading, hospitals, patients, ordinations, services } = this.props;\n\n    var patientsData = [];\n    var hospitalsData = [];\n    var ordinationsData = [];\n    var servicesData = [];\n\n    for (let index = 0; index < hospitals.length; index++) {\n        let hospital = hospitals[index];\n        let hospitalData = { value: hospital.code, label: hospital.name + \", \" + hospital.city };\n        hospitalsData.push(hospitalData);\n    }\n\n    for (let index = 0; index < patients.length; index++) {\n        let patient = patients[index];\n        let patientData = { value: patient.lbo, label: patient.firstName + \" \" + patient.lastName };\n        patientsData.push(patientData);\n    }\n\n    for (let index = 0; index < ordinations.length; index++) {\n      let ordination = ordinations[index];\n      let ordinationData = { value: ordination.code , label: ordination.name };\n      ordinationsData.push(ordinationData);\n    }\n\n    for (let index = 0; index < services.length; index++) {\n      let service = services[index];\n      let serviceData = { value: service.code, label: service.name };\n      servicesData.push(serviceData);\n    }\n\n    return (\n      <Col md={12} lg={12}>\n        <Card>\n          <CardBody>\n            <div className=\"card__title\">\n              <h4 className=\"page-title\" >New Pacient Formulae</h4>\n              <h1 className=\"subhead\">Please, insert mandatory user data for creating new one inside system</h1>\n            </div>\n            <form className=\"form\" onSubmit={handleSubmit}>\n            <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Patient</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"patient\"\n                    component={renderSelectField}\n                    options={patientsData}\n                    placeholder={\"Select patient\"}\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Hospital</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"hospitalCode\"\n                    component={renderSelectField}\n                    options={hospitalsData}\n                    onChange={this.processHospitalSelection}\n                    placeholder={\"Select hospital\"}\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Ordination</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"ordinationCode\"\n                    component={renderSelectField}\n                    options={ordinationsData}\n                    placeholder={\"Select ordination\"}\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Service</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"serviceCode\"\n                    component={renderSelectField}\n                    options={servicesData}\n                    placeholder={\"Select service\"}\n                  />\n                </div>\n              </div>\n              <ButtonToolbar className=\"form__button-toolbar\">\n                <ExpandButton title=\"Submit\" load={isLoading} ></ExpandButton>\n                <Button type=\"button\" onClick={reset}>\n                  Cancel\n                </Button>\n              </ButtonToolbar>\n            </form>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'CreatePatientForm', // a unique identifier for this form\n})(AddPendingForm);\n","import React from 'react';\nimport { Container } from 'reactstrap';\nimport AddPendingForm from './components/addPendingForm';\nimport Loading from '../../../shared/components/Loading';\nimport axios from 'axios';\n\nclass NewPendingComponent extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = { \n      isLoading : false,\n      formSubmited: false,\n      patients: [],\n      hospitals: [],\n      ordinations: [],\n      services: []\n    };\n\n    this.processFormData = this.processFormData.bind(this);\n    this.updateOrdinationsAndServices = this.updateOrdinationsAndServices.bind(this);\n  }\n\n  componentDidMount() {\n      this.setState({ isLoading: true });\n\n      axios({ method: 'GET', url: '/doctor/getPacient/all', headers: { 'Identity_name': 'admin' }})\n        .then(response => {\n            let newPatients = []\n            for (let index = 0; index < response.data.length; index++) {\n                let arrayItem = response.data[index];\n                let patient = {\n                    'firstName': arrayItem.name,\n                    'lastName': arrayItem.surname,\n                    'city': arrayItem.city,\n                    'lbo': arrayItem.lbo,\n                    'jmbg': arrayItem.jmbg,\n                    'hospital_name': arrayItem.hospitalName,\n                    'hospital_code': arrayItem.hospitalCode,\n                    'waiting_status': arrayItem.currentWaitingStatus,\n                    'waiting_list_code': arrayItem.waitingListCode\n                }\n\n                if (patient['waiting_status'] == 1) {\n                    newPatients.push(patient);\n                }\n            }\n\n            this.setState({\n                patients: newPatients,\n                isLoading: false\n            })\n        }, error => {\n           window.alert(error)    \n        })\n\n        axios({ method: 'GET', url: '/shared/getHospital/all', headers: { 'Identity_name': 'admin' }})\n        .then(response => {\n            let hospitals = [];\n            for (let index = 0; index < response.data.length; index++) {\n                let arrayItem = response.data[index];\n                let hospital = {\n                    'city': arrayItem.city,\n                    'code': arrayItem.hospitalCode,\n                    'name': arrayItem.hospitalName,\n                }\n\n                var ordinations = [];\n                for (let index = 0; index < arrayItem.ordinations.length; index++) {\n                  let ordinationItem = arrayItem.ordinations[index];\n                  let ordination = {\n                    'code': ordinationItem.ordinationCode,\n                    'name': ordinationItem.ordinationName\n                  }\n\n                  ordinations.push(ordination);\n                }\n\n                hospital.ordinations = ordinations;\n\n                var services = [];\n                for (let index = 0; index < arrayItem.services.length; index++) {\n                  \n                  let serviceItem = arrayItem.services[index];\n                  let service = {\n                    'name': serviceItem.serviceName,\n                    'code': serviceItem.serviceCode,\n                    'dayCapacity': serviceItem.dayCapacity\n                  }\n\n                  services.push(service);\n                }\n\n                hospital.services = services;\n\n                hospitals.push(hospital);\n            }\n\n            this.setState({\n                hospitals: hospitals,\n                isLoading: false\n            })\n\n        }, error => {\n           window.alert(error)    \n        })\n  }\n\n  updateOrdinationsAndServices(hospitalCode) {\n\n    let selectedHospital = this.state.hospitals.find(hospital => hospital.code == hospitalCode);\n\n    this.setState({ services: selectedHospital.services, \n                    ordinations: selectedHospital.ordinations });\n  }\n\n  processFormData(data) {\n\n    this.setState({ formSubmited: true });\n\n    const selectedPatient = this.state.patients.find(patient => patient.lbo == data['patient'].value );\n\n    var bodyFormData = new FormData();\n    bodyFormData.set('pacientLbo', data['patient'].value);\n    bodyFormData.set('pacientJmbg', selectedPatient['jmbg']);\n    bodyFormData.set('serviceCode', data['serviceCode'].value);\n    bodyFormData.set('hospitalCode', data['hospitalCode'].value);\n    bodyFormData.set('ordinationCode', data['ordinationCode'].value);\n\n    axios({ method: 'POST', url: '/doctor/createNewPending', data: bodyFormData, headers: { 'Identity_name': 'doctor' }})\n    .then(response => {\n      console.log(response);\n      window.alert(\"Succeed\");\n    }, error => {\n      \n      window.alert(error);\n      console.log(error);\n    }).then(() => {\n      this.setState({ formSubmited: false });\n    });\n  }\n\n  render() {\n\n    const { isLoading, formSubmited, patients, hospitals, ordinations, services } = this.state;\n\n    if (isLoading) {\n        return (<Loading loading={isLoading} />);\n    }\n\n    return (\n      <Container className=\"dashboard\">\n        <AddPendingForm onSubmit={this.processFormData} \n                        updateSelectionData={this.updateOrdinationsAndServices}\n                        isLoading={formSubmited}\n                        patients={patients}\n                        hospitals={hospitals}\n                        ordinations={ordinations}\n                        services={services}></AddPendingForm>\n      </Container>\n    );\n  };\n}\n\nexport default NewPendingComponent;","/* eslint-disable react/no-unused-state,react/no-unescaped-entities */\nimport React, { PureComponent } from 'react';\nimport PropTypes, { array } from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { ThemeProps } from '../../../../shared/prop-types/ReducerProps';\nimport DataTable from 'react-data-table-component';\n\nclass AllPatientsTable extends PureComponent {\n  static propTypes = {\n    data: array.isRequired,\n    theme: ThemeProps.isRequired\n  };\n\n  constructor() {\n    super();\n\n    const headers = [\n      {\n        selector: 'pacientLbo',\n        name: 'Pacient LBO',\n        sortable: true,\n      },\n      {\n        selector: 'pacientJmbg',\n        name: 'Pacient JMBG',\n        sortable: true,\n      },\n      {\n        selector: 'hospitalCode',\n        name: 'Hospital Code',\n        sortable: true,\n      },\n     \n      {\n        selector: 'serviceCode',\n        name: 'Service Code',\n        sortable: true,\n      },\n      {\n        selector: 'ordinationCode',\n        name: 'Ordination Code',\n        sortable: true,\n      },\n     \n    ];\n\n    this.state = {\n      data: [],\n      headers: headers\n    };\n  }\n\n\n  render() {\n    const { headers } = this.state;\n    const { theme, data } = this.props;\n\n    return (      \n      <Col md={12} lg={12}>\n      <Card>\n        <CardBody>\n          <div className=\"card__title\">\n            <h5 className=\"bold-text\">All pendings in system</h5>\n            <h5 className=\"subhead\">List of all pendings for all hospitals registered</h5>\n          </div>\n      <DataTable pagination={true} \n                 theme={ theme.className === 'theme-light' ? 'light' : 'dark'}\n                 noHeader={true}\n                 columns={headers}\n                 data={data}/>\n        </CardBody>\n       </Card>\n      </Col>\n    );\n  }\n}\n\nexport default withRouter(connect(state => ({\n  theme: state.theme,\n}))(AllPatientsTable));","import React from 'react';\nimport { Container } from 'reactstrap';\nimport Loading from '../../../shared/components/Loading';\nimport axios from 'axios';\nimport AllPendingsTable from './components/allPendingsTable';\n\nclass AllPendingsComponent extends React.Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            loading: false,\n            pendings: []\n        };\n    }\n\n    componentDidMount() {\n        this.setState({ loading: true });\n        axios({ method: 'GET', url: '/shared/getAllPendings', headers: { 'Identity_name': 'doctor' }})\n        .then(response => {\n            let pendings = [];\n            for (let index = 0; index < response.data.length; index++) {\n                let arrayItem = response.data[index];\n                let pending = {\n                    'hospitalCode': arrayItem.hospitalCode,\n                    'ordinationCode': arrayItem.ordinationCode,\n                    'pacientLbo': arrayItem.pacientLbo,\n                    'serviceCode': arrayItem.serviceCode,\n                    'pacientJmbg': arrayItem.pacientJmbg,\n                   \n                }\n                pendings.push(pending);\n            }\n\n            this.setState({\n                pendings: pendings,\n                loading: false\n            })\n        }, error => {\n           window.alert(error)    \n        })\n      }\n\n    render() {\n        const { pendings, loading } = this.state;\n        console.log(\"Is loading \" + loading);\n\n        if (loading) {\n            return (<Loading loading={loading} />);\n        }\n\n        return (    \n            <Container className=\"dashboard\">\n                <AllPendingsTable data={pendings}/>\n            </Container>\n        )\n    };\n}\n\nexport default AllPendingsComponent;","import React, { PureComponent } from 'react';\nimport {\n  Card, CardBody, Col, Button, ButtonToolbar,\n} from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport PropTypes from 'prop-types';\n\nclass CreateUserForm extends PureComponent {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    isLoading: PropTypes.bool.isRequired,\n    reset: PropTypes.func.isRequired,\n  };\n\n  constructor() {\n    super();\n  }\n\n  render() {\n    const { handleSubmit, reset } = this.props;\n\n    return (\n      <Col md={12} lg={12}>\n        <Card>\n          <CardBody>\n            <div className=\"card__title\">\n              <h4 className=\"page-title\" >New System User Formulae</h4>\n              <h1 className=\"subhead\">Please, insert mandatory fields for creating new user for system</h1>\n            </div>\n            <form className=\"form\" onSubmit={handleSubmit}>\n              <div className=\"form__form-group\">\n                <span clform__form-group-descriptionform__form-group-descriptionassName=\"form__form-group-label\">Name</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"username\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder=\"Admin1234\"\n                  />\n                </div>\n              </div>\n              <ButtonToolbar className=\"form__button-toolbar\">\n                <Button color=\"primary\" type=\"submit\">Submit</Button>\n                <Button type=\"button\" onClick={reset}>\n                  Cancel\n                </Button>\n              </ButtonToolbar>\n            </form>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'CreateUserForm',\n})(CreateUserForm);\n","import React from 'react';\nimport { Container } from 'reactstrap';\nimport CreateUserForm from './components/CreateUserForm';\nimport Loading from '../../../shared/components/Loading';\nimport axios from 'axios';\n\nclass CreateUserComponent extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = { \n      isLoading : false\n     };\n\n    this.processFormData = this.processFormData.bind(this);\n  }\n\n  processFormData(data) {\n    \n    this.setState({ isLoading: true });\n\n    var bodyFormData = new FormData();\n    bodyFormData.set('userName', data['username']);\n\n    axios({ method: 'POST', url: '/admin/registerUserWallet', data: bodyFormData, headers: { 'Identity_name': 'admin' }})\n    .then(response => {\n      console.log(response);\n      window.alert(\"Succedd\");\n    }, error => {\n      window.alert(error);\n      console.log(error);\n    }).then(() => {\n        this.setState({ isLoading: false });\n    });\n    console.log(\"On submit data passed:\" + JSON.stringify(data, null ,2));\n  }\n\n  render() {\n    const { isLoading } = this.state;\n\n    if (isLoading) {\n        return (<Loading loading={isLoading} />);\n    }\n\n    return (\n      <Container className=\"dashboard\">\n        <CreateUserForm onSubmit={this.processFormData}></CreateUserForm>\n      </Container>\n    )\n  };\n}\n\nexport default CreateUserComponent;","import React, { PureComponent } from 'react';\nimport {\n  Card, CardBody, Col, Button, ButtonToolbar,\n} from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport PropTypes from 'prop-types';\n\nclass DeleteUserForm extends PureComponent {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    reset: PropTypes.func.isRequired,\n  };\n\n  constructor() {\n    super();\n  }\n\n  render() {\n    const { handleSubmit, reset } = this.props;\n\n    return (\n      <Col md={12} lg={12}>\n        <Card>\n          <CardBody>\n            <div className=\"card__title\">\n              <h4 className=\"page-title\" >Delete System User Formulae</h4>\n              <h1 className=\"subhead\">Please, insert mandatory fields for deleting user for system</h1>\n            </div>\n            <form className=\"form\" onSubmit={handleSubmit}>\n              <div className=\"form__form-group\">\n                <span clform__form-group-descriptionform__form-group-descriptionassName=\"form__form-group-label\">Name</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"username\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder=\"Admin1234\"\n                  />\n                </div>\n              </div>\n              <ButtonToolbar className=\"form__button-toolbar\">\n                <Button color=\"primary\" type=\"submit\">Submit</Button>\n                <Button type=\"button\" onClick={reset}>\n                  Cancel\n                </Button>\n              </ButtonToolbar>\n            </form>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'DeleteUserForm',\n})(DeleteUserForm);\n","import React from 'react';\nimport { Container } from 'reactstrap';\nimport DeleteUserForm from './components/DeleteUserForm';\nimport Loading from '../../../shared/components/Loading';\nimport axios from 'axios';\n\nclass DeleteUserComponent extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = { \n      isLoading : false\n     };\n\n    this.processFormData = this.processFormData.bind(this);\n  }\n\n  processFormData(data) {\n    this.setState({ loadingStarted: true });\n\n    var bodyFormData = new FormData();\n    bodyFormData.set('username', data['username']);\n\n    axios({ method: 'DELETE', url: '/admin/deleteUserWallet', data: bodyFormData, headers: { 'Identity_name': 'admin' }})\n    .then(response => {\n      console.log(response);\n      window.alert(\"Succedd\");\n    }, error => {\n      window.alert(error);\n      console.log(error);\n    }).then(() => {\n        this.setState({ isLoading: false });\n    });\n    console.log(\"On submit data passed:\" + JSON.stringify(data, null ,2));\n  }\n\n  render() {\n    const { isLoading } = this.state;\n\n    if (isLoading) {\n        return (<Loading loading={isLoading} />);\n    }\n\n    return (\n      <Container className=\"dashboard\">\n        <DeleteUserForm onSubmit={this.processFormData}></DeleteUserForm>\n      </Container>\n    )\n  };\n}\n\nexport default DeleteUserComponent;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, ButtonToolbar, Modal } from 'reactstrap';\nimport classNames from 'classnames';\nimport { RTLProps } from '../prop-types/ReducerProps';\n\nclass ModalComponent extends PureComponent {\n  static propTypes = {\n    title: PropTypes.string,\n    message: PropTypes.string,\n    color: PropTypes.string.isRequired,\n    colored: PropTypes.bool,\n    header: PropTypes.bool,\n    btn: PropTypes.string.isRequired,\n    onAgreed: PropTypes.func.isRequired,\n    rtl: RTLProps.isRequired,\n  };\n\n  static defaultProps = {\n    title: '',\n    message: '',\n    colored: false,\n    header: false,\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      modal: false,\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.agreedTapped = this.agreedTapped.bind(this);\n  }\n  \n  agreedTapped() {\n    const { onAgreed } = this.props;\n    if (onAgreed) {\n      onAgreed();\n    }\n    this.setState(prevState => ({ modal: !prevState.modal }));\n  }\n\n  toggle() {\n    this.setState(prevState => ({ modal: !prevState.modal }));\n  }\n\n  render() {\n    const {\n      color, btn, title, message, colored, header, rtl,\n    } = this.props;\n    const { modal } = this.state;\n    let Icon;\n\n    switch (color) {\n      case 'primary':\n        Icon = <span className=\"lnr lnr-question-circle modal__title-icon\" />;\n        break;\n      case 'success':\n        Icon = <span className=\"lnr lnr-thumbs-up modal__title-icon\" />;\n        break;\n      case 'warning':\n        Icon = <span className=\"lnr lnr-flag modal__title-icon\" />;\n        break;\n      case 'danger':\n        Icon = <span className=\"lnr lnr-cross-circle modal__title-icon\" />;\n        break;\n      default:\n        break;\n    }\n    const modalClass = classNames({\n      'modal-dialog--colored': colored,\n      'modal-dialog--header': header,\n    });\n\n    return (\n      <div>\n        <Button color={color} onClick={this.toggle}>{btn}</Button>\n        <Modal\n          isOpen={modal}\n          toggle={this.toggle}\n          modalClassName={`${rtl.direction}-support`}\n          className={`modal-dialog--${color} ${modalClass}`}\n        >\n          <div className=\"modal__header\">\n            <button className=\"lnr lnr-cross modal__close-btn\" type=\"button\" onClick={this.toggle} />\n            {header ? '' : Icon}\n            <h4 className=\"text-modal  modal__title\">{title}</h4>\n          </div>\n          <div className=\"modal__body\">\n            {message}\n          </div>\n          <ButtonToolbar className=\"modal__footer\">\n            <Button className=\"modal_cancel\" onClick={this.toggle}>Cancel</Button>{' '}\n            <Button className=\"modal_ok\" outline={colored} color={color} onClick={this.agreedTapped}>Ok</Button>\n          </ButtonToolbar>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default connect(state => ({\n  rtl: state.rtl,\n}))(ModalComponent);\n","/* eslint-disable react/no-unused-state,react/no-unescaped-entities */\nimport React, { PureComponent } from 'react';\nimport PropTypes, { array } from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Card, CardBody, Col, ButtonToolbar } from 'reactstrap';\nimport { ThemeProps } from '../../../../shared/prop-types/ReducerProps';\nimport DataTable from 'react-data-table-component';\nimport Modal from '../../../../shared/components/ModalPopUp';\n\nclass AllPendingsForHospitalTable extends PureComponent {\n  static propTypes = {\n    data: array.isRequired,\n    theme: ThemeProps.isRequired,\n    onApprove: PropTypes.func.isRequired\n  };\n\n  constructor() {\n    super();\n\n    this.onRowClick = this.onRowClick.bind(this);\n    this.onApproveClick = this.onApproveClick.bind(this);\n\n    const headers = [\n      {\n        selector: 'index',\n        name: 'Index',\n        sortable: true,\n      },\n      {\n        selector: 'pacientLbo',\n        name: 'Pacient LBO',\n        sortable: true,\n      },\n      {\n        selector: 'pacientJmbg',\n        name: 'Pacient JMBG',\n        sortable: true,\n      },\n      {\n        selector: 'hospitalCode',\n        name: 'Hospital Code',\n        sortable: true,\n      },\n     \n      {\n        selector: 'serviceCode',\n        name: 'Service Code',\n        sortable: true,\n      },\n      {\n        selector: 'ordinationCode',\n        name: 'Ordination Code',\n        sortable: true,\n      },\n      {\n        selector: 'approvePending',\n        name: 'Actions',\n        cell: row =>  <ButtonToolbar className=\"form__button-toolbar\">\n                                   <Modal\n                                     color=\"primary\"\n                                     title=\"Question\"\n                                     btn=\"Approve\"\n                                     message=\"Are you sure you want to approve this patient's pending for waiting list?\"\n                                     onAgreed={ () => this.onApproveClick(row)}/>\n      </ButtonToolbar>,\n      }\n    ];\n\n    this.state = {\n      data: [],\n      headers: headers\n    };\n  }\n\n  onApproveClick(row) {\n    const { onApprove } = this.props;\n    onApprove(row);\n  }\n\n  onRowClick(row) {\n    window.alert(row.pacientLbo);\n  }\n\n\n  render() {\n    const { headers } = this.state;\n    const { theme, data } = this.props;\n\n    return (      \n      <Col md={12} lg={12}>\n      <Card>\n        <CardBody>\n          <div className=\"card__title\">\n            <h5 className=\"bold-text\">All pendings in hospital</h5>\n            <h5 className=\"subhead\">List of all pendings for hospital in which is current user registered</h5>\n          </div>\n      <DataTable pagination={true} \n                 theme={ theme.className === 'theme-light' ? 'light' : 'dark'}\n                 noHeader={true}\n                 columns={headers}\n                 data={data}\n                 onRowClicked={this.onRowClick}/>\n        </CardBody>\n       </Card>\n      </Col>\n    );\n  }\n}\n\nexport default withRouter(connect(state => ({\n  theme: state.theme,\n}))(AllPendingsForHospitalTable));","import React from 'react';\nimport { Container } from 'reactstrap';\nimport Loading from '../../../shared/components/Loading';\nimport axios from 'axios';\nimport AllPendingsForHospitalTable from './components/allPendingsForHospitalTable';\n\nclass AllPendingsForHospitalComponent extends React.Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            loading: false,\n            pendings: []\n        };\n\n        this.approveTapped = this.approveTapped.bind(this);\n    }\n\n    componentDidMount() {\n        this.getPatients();\n    }\n\n    getPatients() {\n        var store = require('store');\n        const hospitalCode = store.get('user').hospitalCode;\n\n        this.setState({ loading: true });\n        axios({ method: 'GET', url: '/shared/getPendingsForHospital', headers: { 'Identity_name': 'doctor' }, params: { 'hospitalCode': hospitalCode }})\n        .then(response => {\n            let pendings = [];\n            for (let index = 0; index < response.data.length; index++) {\n                let arrayItem = response.data[index];\n                let pending = {\n                    'index': index,\n                    'hospitalCode': arrayItem.hospitalCode,\n                    'ordinationCode': arrayItem.ordinationCode,\n                    'pacientLbo': arrayItem.pacientLbo,\n                    'serviceCode': arrayItem.serviceCode,\n                    'pacientJmbg': arrayItem.pacientJmbg,\n                   \n                }\n                pendings.push(pending);\n            }\n\n            this.setState({\n                pendings: pendings,\n                loading: false\n            })\n        }, error => {\n           window.alert(error)    \n        })\n    }\n\n    approveTapped(rowData) {\n\n        const storage = require('store');\n        const licenceId = storage.get('user').userId;\n\n        var bodyFormData = new FormData();\n        bodyFormData.set('licenceId', licenceId);\n        bodyFormData.set('pacientLbo', rowData.pacientLbo);\n        bodyFormData.set('serviceCode', rowData.serviceCode);\n        bodyFormData.set('hospitalCode', rowData.hospitalCode);\n        bodyFormData.set('ordinationCode', rowData.ordinationCode);\n\n        axios({ method: 'POST', url: '/shared/approvePending', data: bodyFormData, headers: { 'Identity_name': 'doctor' } })\n        .then(response => {\n            window.alert('succedd');\n            this.getPatients();\n        }, error => {\n            window.alert('error');\n        })\n    }\n\n    render() {\n        const { pendings, loading } = this.state;\n        console.log(\"Is loading \" + loading);\n\n        if (loading) {\n            return (<Loading loading={loading} />);\n        }\n\n        return (    \n            <Container className=\"dashboard\">\n                <AllPendingsForHospitalTable data={pendings} onApprove={this.approveTapped}/>\n            </Container>\n        )\n    };\n}\n\nexport default AllPendingsForHospitalComponent;","import React, { PureComponent } from 'react';\nimport {\n  Card, CardBody, Col, Button, ButtonToolbar,\n} from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport PropTypes from 'prop-types';\nimport renderSelectField from '../../../../shared/components/form/Select';\nimport ExpandButton from '../../../../shared/components/Buttons/ExpandButton';\n\nclass ChangePacientWaitingStatusForm extends PureComponent {\n  static propTypes = {\n    patients: PropTypes.array.isRequired,\n    isLoading: PropTypes.bool.isRequired,\n    updateSelectionData: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    reset: PropTypes.func.isRequired,\n  };\n\n  constructor() {\n    super();\n\n    const statuses = [{ index: '0', label: 'Reset'}, { index: '1', label: 'Set to Pending'} ];\n\n    this.state = { \n        possibleStatus: statuses\n    }\n  }\n\n  render() {\n    const { handleSubmit, reset, isLoading, patients } = this.props;\n    const { possibleStatus } = this.state;\n\n    var patientsData = [];\n\n    for (let index = 0; index < patients.length; index++) {\n        let patient = patients[index];\n        let patientData = { value: patient.lbo, label: patient.firstName + \" \" + patient.lastName };\n        patientsData.push(patientData);\n    }\n\n    var statusesData = [];\n    for (let index = 0; index < possibleStatus.length; index++) {\n        let waitingStatus = possibleStatus[index];\n        let statusData = { value: waitingStatus.index, label: waitingStatus.label };\n        statusesData.push(statusData);\n    }\n\n    return (\n      <Col md={12} lg={12}>\n        <Card>\n          <CardBody>\n            <div className=\"card__title\">\n              <h4 className=\"page-title\" >Changing Pacient Waiting Status</h4>\n              <h1 className=\"subhead\">Please, select one of suggested waiting status for selected pacient</h1>\n            </div>\n            <form className=\"form\" onSubmit={handleSubmit}>\n            <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Patient</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"patient\"\n                    component={renderSelectField}\n                    options={patientsData}\n                    placeholder={\"Select patient\"}\n                  />\n                </div>\n              </div>\n              <div className=\"form__form-group\">\n                <span className=\"form__form-group-label\">Waiting Status</span>\n                <div className=\"form__form-group-field\">\n                  <Field\n                    name=\"waitingStatus\"\n                    component={renderSelectField}\n                    options={statusesData}\n                    placeholder={\"Select waiting status\"}\n                  />\n                </div>\n              </div>\n              <ButtonToolbar className=\"form__button-toolbar\">\n                <ExpandButton title=\"Submit\" load={isLoading} ></ExpandButton>\n                <Button type=\"button\" onClick={reset}>\n                  Cancel\n                </Button>\n              </ButtonToolbar>\n            </form>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'ChangePacientWaitingStatusForm', // a unique identifier for this form\n})(ChangePacientWaitingStatusForm);\n","import React from 'react';\nimport { Container } from 'reactstrap';\nimport ChangePacientWaitingStatusForm from './components/setPacientWaitingStatusForm';\nimport Loading from '../../../shared/components/Loading';\nimport axios from 'axios';\n\nclass PacientWaitingStatusComponent extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = { \n      isLoading : false,\n      formSubmited: false,\n      patients: []\n    };\n\n    this.processFormData = this.processFormData.bind(this);\n  }\n\n  componentDidMount() {\n      this.setState({ isLoading: true });\n\n      axios({ method: 'GET', url: '/doctor/getPacient/all', headers: { 'Identity_name': 'admin' }})\n        .then(response => {\n            let newPatients = []\n            for (let index = 0; index < response.data.length; index++) {\n                let arrayItem = response.data[index];\n                let patient = {\n                    'firstName': arrayItem.name,\n                    'lastName': arrayItem.surname,\n                    'lbo': arrayItem.lbo,\n                }\n\n                newPatients.push(patient);\n            }\n\n            this.setState({\n                patients: newPatients,\n                isLoading: false\n            })\n        }, error => {\n           window.alert(error)    \n        })\n  }\n\n\n  processFormData(data) {\n\n    this.setState({ formSubmited: true });\n    const newWaitingStatus = data['waitingStatus'].value;\n    \n    var targetUrl;\n    if (newWaitingStatus == 0) {\n        \n        targetUrl = '/doctor/resetPacientWaitingStatus';\n    } else if (newWaitingStatus == 1) {\n        targetUrl = '/doctor/changePacientStatusToPending';\n    }\n\n    var bodyFormData = new FormData();\n    bodyFormData.set('pacientLbo', data['patient'].value);\n\n    axios({ method: 'POST', url: targetUrl, data: bodyFormData, headers: { 'Identity_name': 'doctor' }})\n    .then(response => {\n      console.log(response);\n      window.alert(\"Succeed\");\n    }, error => {\n      \n      window.alert(error);\n      console.log(error);\n    }).then(() => {\n      this.setState({ formSubmited: false });\n    });\n  }\n\n  render() {\n\n    const { isLoading, formSubmited, patients, hospitals, ordinations, services } = this.state;\n\n    if (isLoading) {\n        return (<Loading loading={isLoading} />);\n    }\n\n    return (\n      <Container className=\"dashboard\">\n        <ChangePacientWaitingStatusForm onSubmit={this.processFormData} \n                        updateSelectionData={this.updateOrdinationsAndServices}\n                        isLoading={formSubmited}\n                        patients={patients}\n                        ></ChangePacientWaitingStatusForm>\n      </Container>\n    );\n  };\n}\n\nexport default PacientWaitingStatusComponent;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Layout from '../Layout/index';\nimport MainWrapper from './MainWrapper';\n\nimport LogIn from '../LogIn/index';\nimport CreatePacientForm from '../Pacient/CreatePatient/index';\nimport ExamplePageTwo from '../ExampleTwo/index';\nimport ExamplePageThree from '../ExampleThree/index';\nimport AllPatientsComponent from '../Pacient/AllPatients/index';\nimport AllPatientsForHospitalComponent from '../Pacient/AllPatientsForHospital/index';\nimport NewPendingComponent from '../Pacient/AddToPending/index';\nimport AllPendingsComponent from '../Pacient/AllPendings/index';\nimport CreateUserForm from '../Admin/CreateUser/index';\nimport DeleteUserForm from '../Admin/DeleteUser/index';\nimport AllPendingsForHospitalComponent from '../Pacient/AllPendingsForHospital';\nimport PacientWaitingStatusComponent from '../Pacient/SetPacientWaitingStatus';\n\nconst Pages = () => (\n  <Switch>\n    <Route path=\"/pages/createPatient\" component={CreatePacientForm} />\n    <Route path=\"/pages/allPatients\" component={AllPatientsComponent}/>\n    <Route path=\"/pages/allPatientsForHospital\" component={AllPatientsForHospitalComponent}/>\n    <Route path=\"/pages/addNewPending\" component={NewPendingComponent}/>\n    <Route path=\"/pages/allPendings\" component={AllPendingsComponent}/>\n    <Route path=\"/pages/allPendingsForHospital\" component={AllPendingsForHospitalComponent}/>\n    <Route path=\"/pages/setPacientWaitingStatus\" component={PacientWaitingStatusComponent}/>\n    <Route path=\"/pages/createUser\" component={CreateUserForm}/>\n    <Route path=\"/pages/deleteUser\" component={DeleteUserForm}/>\n    <Route path=\"/pages/two\" component={ExamplePageTwo} />\n    <Route path=\"/pages/three\" component={ExamplePageThree} />\n  </Switch>\n);\n\nconst wrappedRoutes = () => (\n  <div>\n    <Layout />\n    <div className=\"container__wrap\">\n      <Route path=\"/pages\" component={Pages} />\n    </div>\n  </div>\n);\n\nconst Router = () => (\n  <MainWrapper>\n    <main>\n      <Switch>\n        <Route exact path=\"/\" component={LogIn} />\n        <Route exact path=\"/log_in\" component={LogIn} />\n        <Route path=\"/\" component={wrappedRoutes} />\n      </Switch>\n    </main>\n  </MainWrapper>\n);\n\nexport default Router;\n","import {\n  CHANGE_THEME_TO_DARK,\n  CHANGE_THEME_TO_LIGHT,\n} from '../actions/themeActions';\n\nconst initialState = {\n  className: 'theme-light',\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_THEME_TO_DARK:\n      return { className: 'theme-dark' };\n    case CHANGE_THEME_TO_LIGHT:\n      return { className: 'theme-light' };\n    default:\n      return state;\n  }\n}\n","import {\n  CHANGE_SIDEBAR_VISIBILITY,\n  CHANGE_MOBILE_SIDEBAR_VISIBILITY,\n} from '../actions/sidebarActions';\n\nconst initialState = {\n  show: false,\n  collapse: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_SIDEBAR_VISIBILITY:\n      return { ...state, collapse: !state.collapse };\n    case CHANGE_MOBILE_SIDEBAR_VISIBILITY:\n      return { ...state, show: !state.show };\n    default:\n      return state;\n  }\n}\n","import {\n  CHANGE_DIRECTION_TO_LTR,\n  CHANGE_DIRECTION_TO_RTL,\n} from '../actions/rtlActions';\n\nconst initialState = {\n  direction: 'ltr',\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_DIRECTION_TO_LTR:\n      return { direction: 'ltr' };\n    case CHANGE_DIRECTION_TO_RTL:\n      return { direction: 'rtl' };\n    default:\n      return state;\n  }\n}\n","import {\n    ADD_USER,\n    CLEAR_USER,\n  } from '../actions/userActions';\n  \n  const initialState = {\n    userId: '',\n    role: ''\n  };\n  \n  export default function (state = initialState, action) {\n    switch (action.type) {\n      case ADD_USER:\n        return { ...state, userId: state.userId };\n      case CLEAR_USER:\n        return { ...state, userId: state.userId };\n      default:\n        return state;\n    }\n  }\n  ","import { combineReducers, createStore } from 'redux';\nimport { reducer as reduxFormReducer } from 'redux-form';\nimport { sidebarReducer, themeReducer, rtlReducer } from '../../redux/reducers/index';\n\nconst reducer = combineReducers({\n  form: reduxFormReducer, // mounted under \"form\",\n  theme: themeReducer,\n  sidebar: sidebarReducer,\n  rtl: rtlReducer,\n});\n\nconst store = createStore(reducer);\n\nexport default store;\n","export const CHANGE_DIRECTION_TO_LTR = 'CHANGE_DIRECTION_TO_LTR';\nexport const CHANGE_DIRECTION_TO_RTL = 'CHANGE_DIRECTION_TO_RTL';\n\nexport function changeDirectionToLTR() {\n  return {\n    type: CHANGE_DIRECTION_TO_LTR,\n  };\n}\n\nexport function changeDirectionToRTL() {\n  return {\n    type: CHANGE_DIRECTION_TO_RTL,\n  };\n}\n","import { PureComponent } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass ScrollToTop extends PureComponent {\n  static propTypes = {\n    location: PropTypes.shape({\n      pathname: PropTypes.string,\n    }).isRequired,\n    children: PropTypes.element.isRequired,\n  };\n\n  componentDidUpdate(prevProps) {\n    const { location } = this.props;\n    if (location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n    return children;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n","import React, { Component, Fragment } from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../../scss/app.scss';\nimport Router from './Router';\nimport store from './store';\nimport ScrollToTop from './ScrollToTop';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      loaded: false,\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('load', () => {\n      this.setState({ loading: false });\n      setTimeout(() => this.setState({ loaded: true }), 500);\n    });\n  }\n\n  render() {\n    const { loaded, loading } = this.state;\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <ScrollToTop>\n            <Fragment>\n              {!loaded\n              && (\n              <div className={`load${loading ? '' : ' loaded'}`}>\n                <div className=\"load__icon-wrap\">\n                  <svg className=\"load__icon\">\n                    <path fill=\"#4ce1b6\" d=\"M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z\" />\n                  </svg>\n                </div>\n              </div>\n              )\n              }\n              <div>\n                <Router />\n              </div>\n            </Fragment>\n          </ScrollToTop>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}